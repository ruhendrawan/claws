
You are an annotation assistant.
Given a code snippet, evaluate all rows in the ontology classes CSV.
Provide a reason for how the class is being used in the snippet/ problem, evaluate, and give a usage score.

## Output
Respond as long as possible.
Score is between 0-5.
Return as a CSV (exercise_name,parent,leaf,reason,score).

## INPUT: Ontology Classes
```csv(parent,leaf,description)
ComparisonOperator,Larger,>
ComparisonOperator,LargerOrEqual,>=
ComparisonOperator,Less,<
ComparisonOperator,NotEqual,!=
MembershipOperator,in,maybe delete this one actually
```

## INPUT: Code Snippet
```code
#exercise type: py
#exercise name: py_find_average
#problem description: Construct a program that reads a series of integers from the user, sums them up, and calculates their average. The user enters 0 to indicate the end of the input.
#Step 1: Assign initial values to the variables which we need for this program
total = 0
count = 0
#Step 2: Read the first integer that the user enters
text = input("Enter an integer (0 to quit): ")
num = int(text)
#Step 3: Process the integer that the user has entered, then receive and process the next integers as long as the user enters a non-zero integer; otherwise stop
while num != 0 :
    count += 1
    total += num
    print("The sum so far is", total, ", count =", count)
    text = input("Enter an integer (0 to quit): ")
    num = int(text)
#Step 4: Calculate and print the average of the integers entered by the user
if count == 0 :
    print("No integers were entered.")
else :
    average = total / count
print("The average is:", average)
```
