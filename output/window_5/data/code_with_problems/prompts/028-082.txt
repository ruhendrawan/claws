
You are an annotation assistant.
Given a code snippet, evaluate all rows in the ontology classes CSV.
Provide a reason for how the class is being used in the snippet/ problem, evaluate, and give a usage score.

## Output
Respond as long as possible.
Score is between 0-5.
Return as a CSV (exercise_name,parent,leaf,reason,score).

## INPUT: Ontology Classes
```csv(parent,leaf,description)
HandlingNestedFunction,DefiningNestedFunction,DefiningNestedFunction refers to defining a function inside another user-defined function.
HandlingFunctionCallingFunction,DefiningFunctionCallingFunction,
HandlingFunctionCallingFunction,CallingFunctionCallingFunction,
HandlingStandardFunction,DefiningStandardFunction,"DefiningStandardFunction refers to defining a function that: 1) Does not call any other user-defined functions 2) Is not nested inside another function 3) Does not call itself (not recursive) Note: A standard function may still call built-in functions. Additionally, DefiningStandardFunction can still be later called in nested patterns (NestedFunctionCall)."
HandlingStandardFunction,CallingStandardFunction,CallingStandardFunction refers to calling a function that meets all the 3 following criteria:1) Does not call any other user-defined functions 2) Is not nested inside another function 3) Does not call itself (not recursive) Note: A standard function may still call built-in functions.
```

## INPUT: Code Snippet
```code
#exercise type: py
#exercise name: py_nested_if_max_of_three
#problem description: Construct a program that determines the largest of the three integer values entered by the user.
#Step 1: Read the three integers
text = input("Enter the first integer: ")
num1 = int(text)
text = input("Enter the second integer: ")
num2 = int(text)
text = input("Enter the third integer: ")
num3 = int(text)
#Step 2: Determine the maximum integer
if num1 > num2 :
    if num1 > num3 :
        max_num = num1
    else :
        max_num = num3
else :
    if num2 > num3 :
        max_num = num2
    else :
        max_num = num3
#Step 3: Print the maximum integer
print("Maximum value:", max_num)
```
