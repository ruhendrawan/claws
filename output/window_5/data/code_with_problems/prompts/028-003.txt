
You are an annotation assistant.
Given a code snippet, evaluate all rows in the ontology classes CSV.
Provide a reason for how the class is being used in the snippet/ problem, evaluate, and give a usage score.

## Output
Respond as long as possible.
Score is between 0-5.
Return as a CSV (exercise_name,parent,leaf,reason,score).

## INPUT: Ontology Classes
```csv(parent,leaf,description)
HandlingNestedFunction,DefiningNestedFunction,DefiningNestedFunction refers to defining a function inside another user-defined function.
HandlingFunctionCallingFunction,DefiningFunctionCallingFunction,
HandlingFunctionCallingFunction,CallingFunctionCallingFunction,
HandlingStandardFunction,DefiningStandardFunction,"DefiningStandardFunction refers to defining a function that: 1) Does not call any other user-defined functions 2) Is not nested inside another function 3) Does not call itself (not recursive) Note: A standard function may still call built-in functions. Additionally, DefiningStandardFunction can still be later called in nested patterns (NestedFunctionCall)."
HandlingStandardFunction,CallingStandardFunction,CallingStandardFunction refers to calling a function that meets all the 3 following criteria:1) Does not call any other user-defined functions 2) Is not nested inside another function 3) Does not call itself (not recursive) Note: A standard function may still call built-in functions.
```

## INPUT: Code Snippet
```code
#exercise type: py
#exercise name: py_fail_course3
#problem description: Construct a program that determines whether a student fails the course based on the inputs that it receives from the instructor. The student fails the course if his/her score is not above the class average. Drag a tile to each missing field to construct this program.
#Step 1: Read the instructor inputs
text = input("Enter the student's score:")
student_score = int(text)
text = input("Enter the class average:")
class_average = int(text)
#Step 2: Write the boolean expression to determine whether the student fails the course
is_failing = not ( student_score > class_average )
#Step 3: Print the result
if is_failing == True :
    print("Yes! The student fails the course.")
else:
    print("No! The student does not fail the course.")
```
