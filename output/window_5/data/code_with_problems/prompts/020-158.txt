
You are an annotation assistant.
Given a code snippet, evaluate all rows in the ontology classes CSV.
Provide a reason for how the class is being used in the snippet/ problem, evaluate, and give a usage score.

## Output
Respond as long as possible.
Score is between 0-5.
Return as a CSV (exercise_name,parent,leaf,reason,score).

## INPUT: Ontology Classes
```csv(parent,leaf,description)
LiteralCollection,ListLiteral,
LiteralCollection,DictLiteral,
LiteralCollection,TupleLiteral,
```

## INPUT: Code Snippet
```code
#exercise type: py
#exercise name: py_if_else_wage
#problem description: Construct a program for the payment department of a company to calculate the wage of an employee based on the number of hours that the employee has worked. If an employee works over 40 hours in a week, the payment amount should take into account the overtime hours. The overtime hours are paid at a rate one and a half times the regular pay rate.
#Step 1: Assign initial values to the variables which we need for this program
rate = 8.25
standard = 40
#Step 2: Read the number of hours that the employee has worked
text = input("Enter the number of hours that the employee has worked: ")
hours = int(text)
#Step 3: Pay overtime at "time and a half" of the regular rate of pay
if hours > standard :
    wage = standard * rate + ( hours - standard ) * ( rate * 1.5 )
else :
    wage = hours * rate
#Step 4: Print the calculated wage
print("Wage:", wage)
```
