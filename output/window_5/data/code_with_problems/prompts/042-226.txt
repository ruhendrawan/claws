
You are an annotation assistant.
Given a code snippet, evaluate all rows in the ontology classes CSV.
Provide a reason for how the class is being used in the snippet/ problem, evaluate, and give a usage score.

## Output
Respond as long as possible.
Score is between 0-5.
Return as a CSV (exercise_name,parent,leaf,reason,score).

## INPUT: Ontology Classes
```csv(parent,leaf,description)
CheckingInWhileLoop,IfElifCheckingInWhileLoop,IfElifCheckingInWhileLoop refers to an if-elif statement inside a while loop
CheckingInWhileLoop,IfCheckingInWhileLoop,IfCheckingInWhileLoop refers to an if statement inside a while loop
CheckingInWhileLoop,IfElifElseCheckingInWhileLoop,IfElifElseCheckingInWhileLoop refers to an if-elif-else statement inside a while loop
```

## INPUT: Code Snippet
```code
#exercise type: py
#exercise name: py_largest_divisor
#Problem description: Construct a program that finds the largest divisor of a positive number, excluding the number itself. For example, the largest divisor of 24 is 12.
#Step 1: Assign initial values to the variables which we need for this program
num = 15
divisor = num-1
#Step 2: Find the largest divisor of the number
while num % divisor != 0 :
    divisor -= 1
print("The largest divisor of", num, "is", divisor)
```
