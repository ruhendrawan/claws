
You are an annotation assistant.
Given a code snippet, evaluate all rows in the ontology classes CSV.
Provide a reason for how the class is being used in the snippet/ problem, evaluate, and give a usage score.

## Output
Respond as long as possible.
Score is between 0-5.
Return as a CSV (exercise_name,parent,leaf,reason,score).

## INPUT: Ontology Classes
```csv(parent,leaf,description)
LiteralCollection,ListLiteral,
LiteralCollection,DictLiteral,
LiteralCollection,TupleLiteral,
```

## INPUT: Code Snippet
```code
#exercise type: py
#exercise name: py_search_list
#problem description: Construct a program that has a function that receives two lists and prints the values in the 2nd list that exist in the 1st list.
#Step 1: Define the function
def search_lists(lst1, lst2):
    #Step 1.1: Iterate through the values in the 2nd list
    for val2 in lst2:
        #Step 1.1.1: Print the value in the 2nd list if it exists in the 1st list
        if val2 in lst1:
            print(val2, "exists in both list.")
#Step 2: Call the function
values_1 = [2.0, 11, 4, 5, 3, 3.5, 4, 10, 16]
values_2 =  [7, 11, 3]
search_lists(values_1, values_2)
```
