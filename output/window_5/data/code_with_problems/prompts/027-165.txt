
You are an annotation assistant.
Given a code snippet, evaluate all rows in the ontology classes CSV.
Provide a reason for how the class is being used in the snippet/ problem, evaluate, and give a usage score.

## Output
Respond as long as possible.
Score is between 0-5.
Return as a CSV (exercise_name,parent,leaf,reason,score).

## INPUT: Ontology Classes
```csv(parent,leaf,description)
ForLoopWithUpdate,ForLoopWithListIndexing,ForLoopWithListIndexing refers to when there is an indexing of a list happening inside a for  loop
ForLoopWithUpdate,ForLoopWith+=,ForLoopWith+= refers to when there is an update of a variable with the addition sign inside a for loop
HandlingFunction,CallingFunctionLibrary,"CallingFunctionLibrary refers to ANY use of built-in Python functions (print, len, replace, etc.) and built-in methods of objects (like list.append() or string.replace(), etc.)."
HandlingFunction,NestedFunctionCall,"NestedFunctionCall refers to when one function call is placed as an argument to another function call (e.g., f(g(x)))"
HandlingNestedFunction,CallingNestedFunction,CallingNestedFunction refers to the call of functions that have in their code the definition of other user-defined functions
```

## INPUT: Code Snippet
```code
#exercise type: py
#exercise name: py_win_percentage_won_equal
#problem description: Construct a program that receives from the user the number of games that a sports team won and tied in a tournament of 12 games and calculates the winning percentage of the sports team, counting ties as half wins. The program must ask the user for each of the two inputs until the user enters a valid number.
#Step 1: Assign initial values to the variables which we need for this program
total_games = 12
#Step 2: Read the number of games that the sports team won in the tournament
text = input("Enter the number of games that the sports team won in the tournament: ")
wins = int(text)
#Step 3: Validate the user input for the number of wins, ask for a valid input as long as the user enters an invalid number; otherwise stop
while wins < 0 or wins > total_games :
    text = input("Enter the number of games that the sports team won in the tournament: ")
    wins = int(text)
#Step 4: Read the number of games that the sports team tied in the tournament
text = input("Enter the number of games tied: ")
ties = int(text)
#Step 5: Validate the user input for the number of ties, ask for a valid input as long as the user enters an invalid number; otherwise stop
while ties < 0 or total_games < (ties + wins) :
    text = input("Enter the number of games tied: ")
    ties = int(text)
#Step 6: Calculate and print the percentage of games won by a team, counting ties as half wins
ratio = ( wins + ties // 2) / total_games
print("Winning percentage:", ratio)
```
