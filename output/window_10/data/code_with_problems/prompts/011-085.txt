
You are an annotation assistant.
Given a code snippet, evaluate all rows in the ontology classes CSV.
Provide a reason for how the class is being used in the snippet/ problem, evaluate, and give a usage score.

## Output
Respond as long as possible.
Score is between 0-5.
Return as a CSV (exercise_name,parent,leaf,reason,score).

## INPUT: Ontology Classes
```csv(parent,leaf,description)
Python,CheckingForItem,check for item with the 'in' construct
Python,Concatenation,
Python,FindingLength,refers to the expression len()
Python,HandlingInput,
Python,Printing,
Python,Importing,
CheckingCondition,BooleanEvaluating,Evaluating boolean expressions
CheckingCondition,IfElseChecking,IfElseChecking refers to an if-else statement which is not placed inside any loop
CheckingCondition,IfChecking,IfChecking refers to an if statement which is not placed inside any loop
CheckingCondition,AssertChecking,
```

## INPUT: Code Snippet
```code
#exercise type: py
#exercise name: py_if_else_grade
#problem description: Construct a program that receives a score from the user and determines the grade as follows:A for scores ≥ 90, B for scores ≥ 80, C for scores ≥ 70, D for scores ≥ 60, F for scores < 60
#Step 1: Read the score
text = input("Enter a score: ")
score = int(text)
#Step 2: Determine the grade for the score
if score >= 90 :
    grade = "A"
elif score >= 80 :
    grade = "B"
elif score >= 70 :
    grade = "C"
elif score >= 60 :
    grade = "D"
else :
    grade = "F"
#Step 3: Print the grade
print("Grade =", grade)
```
