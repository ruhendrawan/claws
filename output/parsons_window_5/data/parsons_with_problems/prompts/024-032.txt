
You are an annotation assistant.
Given a code snippet, evaluate all rows in the ontology classes CSV.
Provide a reason for how the class is being used in the snippet/ problem, evaluate, and give a usage score.

## Output
Respond as long as possible.
Score is between 0-5.
Return as a CSV (exercise_name,parent,leaf,reason,score).

## INPUT: Ontology Classes
```csv(parent,leaf,description)
CheckingCondition,NestedIfChecking,"Nested If Checking refers to having an if, elif, or else block inside another if, elif, or else block."
CheckingCondition,IfElifChecking,IfElifChecking refers to an if-elif statement which is not placed inside any loop
CheckingInWhileLoop,IfCheckingInWhileLoop,IfCheckingInWhileLoop refers to an if statement inside a while loop
CheckingInWhileLoop,IfElseCheckingInWhileLoop,IfElseCheckingInWhileLoop refers to an if-else statement inside a while loop
CheckingInWhileLoop,IfElifCheckingInWhileLoop,IfElifCheckingInWhileLoop refers to an if-elif statement inside a while loop
```

## INPUT: Code Snippet
```code
#exercise type: ps
#exercise name: ps_python_class_point
#problem description: Construct a class Point which has a method to tell distance from another instance of Point.
from math import sqrt
class Point:
	def __init__(self, loc_x, loc_y):
		self.x = loc_x
		self.y = loc_y
	def distance_from(self, another_point):
		x_dist = self.x - another_point.x
		y_dist = self.y - another_point.y
		return sqrt(x_dist * x_dist + y_dist * y_dist)
```
