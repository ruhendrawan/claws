exercise_name,educational_list,parser_list
ae_adl_arithmetics2,"[Multiplication, Addition, AssigningValueVariable, CallingLibraryFunction, Printing, Division, Substraction, CreatingString]","[+, FloatLiteral, print(), IntegerLiteral, =, *, /, FunctionCall, StringLiteral, -, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
ae_adl_comparison,"[BooleanEvaluating, AssigningValueVariable, Printing, CallingLibraryFunction]","[NotEqual, print(), Less, =, Larger, ComparisonExpression, FunctionCall, SimpleAssignmentStatement, ExpressionStatement]"
ae_adl_dict1,"[FindingLength, IfElseChecking, AccessingDictionary, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, Printing, DefiningFunctionCallingFunction, DefiningSimpleFunction, CreatingDictionary, CheckingForItem, AddingItemToDictionary, IndexingDictionary, ChangingValueDictionaryElement, CreatingString]","[StringLiteral, print(), =, IfElseStatement, in, len(), FunctionCall, DictLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, IntegerLiteral, ComparisonExpression]"
ae_adl_dict2,"[AccessingDictionary, Addition, AssigningValueVariable, CallingLibraryFunction, Printing, DefiningSimpleFunction, CreatingDictionary, AddingItemToDictionary, IndexingDictionary, ChangingValueDictionaryElement, ChangingValueVariable, CreatingString, CallingSimpleFunction]","[+, print(), IntegerLiteral, =, DictLiteral, FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression]"
ae_adl_dict3,"[SingleForLoopIteration, FindMaximum, AccessingDictionary, AssigningValueVariable, IfCheckingInForLoop, CallingLibraryFunction, BooleanEvaluating, Printing, DefiningSimpleFunction, CreatingDictionary, AddingItemToDictionary, IndexingDictionary, ForLoopWithListIndexing, ChangingValueDictionaryElement, CreatingString, CallingSimpleFunction]","[ForStatement, or, print(), IntegerLiteral, =, NoneLiteral, Larger, DictLiteral, ComparisonExpression, IfStatement, FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression, ==, BooleanOperation]"
ae_adl_file1,"[ClosingFile, SingleForLoopIteration, TransformingToIntType, Addition, AssigningValueVariable, ReadingLine, CallingLibraryFunction, ChangingValueVariable, Printing, DefiningSimpleFunction, OpeningFile, Division, ForLoopWith+=, CreatingString, CallingSimpleFunction]","[ForStatement, +, open(), print(), IntegerLiteral, int(), close(), =, /, FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
ae_adl_file2,"[ClosingFile, SingleForLoopIteration, TrimmingString, AssigningValueVariable, IfCheckingInForLoop, ReadingLine, CallingLibraryFunction, SplittingString, Printing, DefiningSimpleFunction, OpeningFile, CreatingString, CallingSimpleFunction, BooleanEvaluating]","[ForStatement, open(), print(), =, rstrip(), ComparisonExpression, IfStatement, FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression, close(), split()]"
ae_adl_findmax,"[SingleForLoopIteration, FindMaximum, AssigningValueVariable, IfCheckingInForLoop, CallingLibraryFunction, BooleanEvaluating, Printing, CreatingList, IndexingList, CreatingString]","[ForStatement, print(), IntegerLiteral, =, Larger, ComparisonExpression, IfStatement, ListLiteral, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression]"
ae_adl_for,"[SingleForLoopIteration, CallingLibraryFunction, Printing, Multiplication, CreatingString]","[ForStatement, range(), print(), IntegerLiteral, *, in, FunctionCall, StringLiteral, ExpressionStatement, BinaryOperation]"
ae_adl_format1,"[Printing, AssigningValueVariable, FormattingString, CallingLibraryFunction, NestedFunctionCall, CreatingString]","[print(), IntegerLiteral, =, format(), FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement]"
ae_adl_format2,"[Printing, AssigningValueVariable, FormattingString, CallingLibraryFunction, NestedFunctionCall, CreatingString]","[FloatLiteral, print(), =, format(), FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement]"
ae_adl_functions1,"[DefiningSimpleFunction, Printing, CallingLibraryFunction, CreatingString]","[FunctionCall, StringLiteral, FunctionDefinition, print(), ExpressionStatement]"
ae_adl_functions2,"[Addition, AssigningValueVariable, CallingLibraryFunction, Printing, DefiningSimpleFunction, Division, CreatingString, CallingSimpleFunction]","[+, print(), ReturnStatement, IntegerLiteral, =, /, FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
ae_adl_functions3,"[NestedFunctionCall, Multiplication, Addition, AssigningValueVariable, CallingLibraryFunction, Printing, DefiningSimpleFunction, Substraction, CreatingString]","[+, FunctionDefinition, FloatLiteral, print(), ReturnStatement, =, *, FunctionCall, StringLiteral, -, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IntegerLiteral]"
ae_adl_greet,"[AssigningValueVariable, HandlingInput, CallingLibraryFunction, CreatingString, Printing]","[print(), =, input(), FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement]"
ae_adl_hello,"[CreatingString, Printing, CallingLibraryFunction]","[FunctionCall, StringLiteral, print(), ExpressionStatement]"
ae_adl_hiscore1,"[IfChecking, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, Printing, CreatingString]","[print(), IntegerLiteral, =, Larger, ComparisonExpression, IfStatement, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
ae_adl_hiscore2,"[IfChecking, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, Printing, CreatingString]","[print(), IntegerLiteral, =, Larger, ComparisonExpression, IfStatement, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
ae_adl_ifelifelse,"[AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, Printing, IfElifElseChecking, CreatingString]","[print(), IntegerLiteral, IfElifElseStatement, =, Larger, ComparisonExpression, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
ae_adl_ifelse,"[IfElseChecking, FindRemainder, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, Printing, CreatingString]","[print(), IntegerLiteral, =, IfElseStatement, ComparisonExpression, Modulus, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, ==]"
ae_adl_input1,"[Multiplication, TransformingToIntType, Addition, HandlingInput, AssigningValueVariable, CallingLibraryFunction, Printing, CreatingString]","[+, print(), int(), =, input(), *, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
ae_adl_input2,"[TransformingToFloatType, Multiplication, AssigningValueVariable, HandlingInput, CallingLibraryFunction, Printing, NestedFunctionCall, CreatingString]","[FloatLiteral, print(), =, float(), input(), *, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
ae_adl_lists1,"[AddingListElementWithAppend, FindingLength, AssigningValueVariable, CallingLibraryFunction, Printing, CreatingList, IndexingList, CreatingString]","[print(), IntegerLiteral, =, len(), append(), ListLiteral, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression]"
ae_adl_lists2,"[SingleForLoopIteration, AssigningValueVariable, CallingLibraryFunction, Printing, CreatingList, CreatingString]","[ForStatement, print(), IntegerLiteral, in, ListLiteral, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, =]"
ae_adl_lists3,"[SingleForLoopIteration, FindingLength, Multiplication, AssigningValueVariable, CallingLibraryFunction, Printing, CreatingList, ForLoopWithListIndexing, ForLoopWith*=, ChangingValueListElement, NestedFunctionCall, CreatingString]","[ForStatement, range(), print(), IntegerLiteral, =, *, in, len(), ListLiteral, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression]"
ae_adl_logic,"[BooleanEvaluating, AssigningValueVariable, Substraction, ChangingValueVariable]","[or, IntegerLiteral, Less, =, Larger, ComparisonExpression, LargerOrEqual, -, and, SimpleAssignmentStatement, ExpressionStatement, BooleanOperation]"
ae_adl_nested_if,"[IfElseChecking, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, Printing, NestedIfChecking, CreatingString]","[print(), IntegerLiteral, Less, =, IfElseStatement, ComparisonExpression, LargerOrEqual, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
ae_adl_objects1,"[AssigningValueVariable, CreatingObject, CallingLibraryFunction, Printing, CallingObjectMethod]","[IntegerLiteral, FunctionCall, =, print(), SimpleAssignmentStatement, ExpressionStatement]"
ae_adl_objects2,"[DefiningObjectMethod, DefiningClass, IfChecking, Addition, AssigningValueVariable, CreatingObject, CallingLibraryFunction, BooleanEvaluating, Printing, FindMinimum, CallingObjectMethod, Substraction]","[ClassDefinition, +, min(), FunctionDefinition, print(), ReturnStatement, IntegerLiteral, Less, =, BooleanLiteral, Larger, ComparisonExpression, IfStatement, FunctionCall, -, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
ae_adl_objects3,"[DefiningObjectMethod, DefiningClass, AccessingDictionary, Addition, CreatingObject, AssigningValueVariable, CallingLibraryFunction, Printing, DefiningSimpleFunction, CreatingDictionary, AddingItemToDictionary, CallingObjectMethod, IndexingDictionary, ChangingValueDictionaryElement, Substraction]","[ClassDefinition, +, FunctionDefinition, print(), ReturnStatement, AugmentedAssignmentStatement, =, FunctionCall, DictLiteral, -, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression, IntegerLiteral, init()]"
ae_adl_recursion,"[Multiplication, IfElseChecking, CallingLibraryFunction, DefiningRecursiveFunction, BooleanEvaluating, CallingRecursiveFunction, Substraction, NestedFunctionCall, CreatingString, Printing]","[FunctionDefinition, print(), ReturnStatement, IntegerLiteral, Less, IfElseStatement, *, ComparisonExpression, FunctionCall, StringLiteral, -, ExpressionStatement, BinaryOperation]"
ae_adl_returnvalue,"[TransformingToFloatType, Multiplication, AssigningValueVariable, HandlingInput, FormattingString, CallingLibraryFunction, Printing, DefiningSimpleFunction, NestedFunctionCall, CreatingString, CallingSimpleFunction]","[FloatLiteral, print(), ReturnStatement, =, *, float(), input(), format(), FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
ae_adl_simple_arithmetics,"[Multiplication, Addition, AssigningValueVariable, CallingLibraryFunction, Printing, CreatingString]","[+, IntegerLiteral, =, *, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, print()]"
ae_adl_strings,"[FindingLength, AssigningValueVariable, CallingLibraryFunction, CreatingString, Printing, Concatenation]","[+, print(), =, len(), FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
ae_adl_swap,"[SwappingValueVariables, AssigningValueVariable, Printing, CallingLibraryFunction, CreatingString]","[print(), IntegerLiteral, =, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement]"
ae_adl_tryexcept1,"[TransformingToIntType, Addition, AssigningValueVariable, CallingLibraryFunction, HandlingSpecificError, Printing, CreatingString]","[TryStatement, +, print(), =, ValueError, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, int()]"
ae_adl_tryexcept2,"[TransformingToIntType, Addition, AssigningValueVariable, CallingLibraryFunction, HandlingSpecificError, Printing, DefiningFunctionCallingFunction, DefiningSimpleFunction, CallingFunctionCallingFunction, Division, CreatingString]","[TryStatement, +, print(), ReturnStatement, int(), =, /, ValueError, FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IntegerLiteral]"
ae_adl_vals_refs1,"[AssigningValueVariable, CallingLibraryFunction, Printing, CallingFunctionCallingFunction, DefiningSimpleFunction, CreatingString, DefiningFunctionCallingFunction]","[print(), IntegerLiteral, =, FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement]"
ae_adl_vals_refs2,"[AssigningValueVariable, CallingLibraryFunction, Printing, DefiningFunctionCallingFunction, DefiningSimpleFunction, CallingFunctionCallingFunction, CreatingList, ChangingValueListElement]","[print(), IntegerLiteral, =, ListLiteral, FunctionCall, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression]"
ae_adl_vals_refs3,"[AssigningValueVariable, CallingLibraryFunction, ListReferencing, Printing, DefiningSimpleFunction, CreatingList, ChangingValueListElement, CreatingString, CallingSimpleFunction]","[print(), IntegerLiteral, =, ListLiteral, FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression]"
ae_adl_variables,"[Addition, AssigningValueVariable, CallingLibraryFunction, ChangingValueVariable, Printing, CreatingString]","[+, print(), IntegerLiteral, =, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
ae_adl_while,"[SingleWhileLoopIteration, Multiplication, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, Printing, WhileLoopWith*=, CreatingString, ChangingValueVariable]","[WhileStatement, print(), IntegerLiteral, Less, =, *, ComparisonExpression, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
ae_python_assignment,"[ChangingValueVariable, Addition, AssigningValueVariable]","[+, =, IntegerLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
ae_python_class1,"[AssigningValueVariable, CreatingObject, CallingLibraryFunction, Printing, CallingObjectMethod]","[IntegerLiteral, FunctionCall, =, print(), SimpleAssignmentStatement, ExpressionStatement]"
ae_python_class2,"[DefiningObjectMethod, DefiningClass, IfChecking, Addition, CreatingObject, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, Printing, FindMinimum, CallingObjectMethod, Substraction]","[ClassDefinition, +, min(), FunctionDefinition, print(), ReturnStatement, IntegerLiteral, Less, =, BooleanLiteral, Larger, ComparisonExpression, IfStatement, FunctionCall, -, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, init()]"
ae_python_file,"[ClosingFile, SingleForLoopIteration, TransformingToIntType, TrimmingString, AssigningValueVariable, IfCheckingInForLoop, ReadingLine, CallingLibraryFunction, BooleanEvaluating, SplittingString, Printing, DefiningSimpleFunction, OpeningFile, IndexingList, CallingSimpleFunction]","[ForStatement, open(), print(), IntegerLiteral, Less, int(), close(), =, rstrip(), ComparisonExpression, split(), IfStatement, FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression]"
ae_python_float,"[Multiplication, Addition, HandlingInput, AssigningValueVariable, CallingLibraryFunction, CreatingString, Printing, TransformingToFloatType]","[+, FloatLiteral, print(), =, input(), float(), *, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IntegerLiteral]"
ae_python_for,"[SingleForLoopIteration, Multiplication, Printing, CallingLibraryFunction, CreatingString]","[ForStatement, range(), IntegerLiteral, *, FunctionCall, StringLiteral, ExpressionStatement, BinaryOperation, print()]"
ae_python_function,"[Multiplication, Addition, AssigningValueVariable, CallingLibraryFunction, Printing, CallingFunctionCallingFunction, DefiningSimpleFunction, NestedFunctionCall, CreatingString, DefiningFunctionCallingFunction]","[+, print(), ReturnStatement, IntegerLiteral, =, *, FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
ae_python_if,"[IfElseChecking, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing]","[print(), IntegerLiteral, float(), input(), ComparisonExpression, FunctionCall, StringLiteral, ExpressionStatement, BinaryOperation]"
ae_python_input,"[AssigningValueVariable, HandlingInput, Printing, CallingLibraryFunction, CreatingString]","[print(), =, input(), FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement]"
ae_python_intro,"[Addition, AssigningValueVariable, Multiplication]","[+, FloatLiteral, IntegerLiteral, =, *, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
ae_python_list,"[SingleForLoopIteration, FindingLength, IfElseChecking, AddingListElementWithAppend, AssigningValueVariable, IfCheckingInForLoop, CallingLibraryFunction, BooleanEvaluating, Printing, DefiningFunctionCallingFunction, DefiningSimpleFunction, CallingFunctionCallingFunction, CreatingList, ChangingValueListElement, CreatingString]","[StringLiteral, ForStatement, print(), ReturnStatement, IntegerLiteral, =, IfElseStatement, Larger, ComparisonExpression, in, len(), ListLiteral, FunctionCall, append(), FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression]"
ae_python_split,"[SingleForLoopIteration, FindingLength, IfElseChecking, TransformingToIntType, Addition, IfCheckingInForLoop, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, ChangingValueVariable, SplittingString, Printing, DefiningSimpleFunction, IndexingList, IndexingString, ForLoopWith+=, CreatingString, CallingSimpleFunction]","[ForStatement, +, print(), IntegerLiteral, int(), =, IfElseStatement, Larger, ComparisonExpression, in, len(), IfStatement, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression, split(), FunctionCall]"
ae_python_while,"[SingleWhileLoopIteration, TransformingToIntType, Addition, HandlingInput, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, ChangingValueVariable, Printing, IfCheckingInWhileLoop, WhileLoopWith+=, NestedFunctionCall, CreatingString]","[NotEqual, +, WhileStatement, print(), IntegerLiteral, =, Larger, ComparisonExpression, IfStatement, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, int(), input()]"
objects_classes_loan,"[DefiningObjectMethod, TransformingToFloatType, DefiningClass, TransformingToIntType, Multiplication, Addition, AssigningValueVariable, HandlingInput, FormattingString, CreatingObject, CallingLibraryFunction, Printing, Power, Division, CallingObjectMethod, Substraction, NestedFunctionCall, CreatingString]","[ClassDefinition, +, FunctionDefinition, print(), ReturnStatement, int(), =, **, *, float(), input(), /, format(), FunctionCall, StringLiteral, -, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IntegerLiteral]"
objects_classes_point,"[DefiningObjectMethod, DefiningClass, Addition, CreatingObject, AssigningValueVariable, CallingLibraryFunction, CreatingString, TransformingToStringType, ChangingValueVariable, Printing, CallingObjectMethod, NestedFunctionCall, Concatenation]","[ClassDefinition, +, print(), ReturnStatement, AugmentedAssignmentStatement, =, FunctionCall, FunctionDefinition, str(), SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IntegerLiteral, StringLiteral]"
objects_classes_tv,"[CallingObjectMethod, DefiningObjectMethod, DefiningClass, IfChecking, CreatingObject, AssigningValueVariable, Addition, CallingLibraryFunction, TransformingToStringType, BooleanEvaluating, Printing, Concatenation, NestedFunctionCall, CreatingString, Substraction]","[ClassDefinition, +, print(), ReturnStatement, Less, LessOrEqual, AugmentedAssignmentStatement, =, BooleanLiteral, Larger, LargerOrEqual, FunctionCall, StringLiteral, FunctionDefinition, str(), SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, UnaryOperation, IfStatement, IntegerLiteral, ComparisonExpression, -, BooleanOperation, and]"
ps_hello,"[Printing, CallingLibraryFunction]","[FunctionCall, StringLiteral, print(), ExpressionStatement]"
ps_python_2d_list,"[AddingListElementWithAppend, Multiplication, AssigningValueVariable, NestedForLoopIteration, Create2DArray, CallingLibraryFunction, Addition, Printing, CreatingList, ForLoopWithListIndexing, ForLoopWith*=, ForLoopWith+=, ChangingValueListElement, ChangingValue2DArrayElement]","[ForStatement, +, range(), print(), IntegerLiteral, *, ListLiteral, FunctionCall, append(), SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression, =]"
ps_python_add_to_list,"[DefiningSimpleFunction, SingleForLoopIteration, FindingLength, CallingLibraryFunction, ForLoopWithListIndexing, ChangingValueListElement, Addition, ChangingValueVariable]","[ForStatement, AugmentedAssignmentStatement, len(), FunctionCall, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression, +, =, range()]"
ps_python_addition,"[Addition, AssigningValueVariable, CallingLibraryFunction, ChangingValueVariable, Printing]","[+, FunctionCall, IntegerLiteral, print(), SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, =]"
ps_python_bigger_than,"[Printing, CallingLibraryFunction, BooleanEvaluating]","[print(), Larger, ComparisonExpression, FunctionCall, StringLiteral, ExpressionStatement, BinaryOperation]"
ps_python_calculate_function,"[NestedFunctionCall, Multiplication, CallingSimpleFunction, AssigningValueVariable, Addition, CallingLibraryFunction, Printing, DefiningSimpleFunction]","[+, print(), ReturnStatement, IntegerLiteral, *, FunctionCall, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, =]"
ps_python_class_person,"[CallingObjectMethod, DefiningObjectMethod, DefiningClass, AssigningValueVariable, CreatingObject, CallingLibraryFunction, Printing, Concatenation, NestedFunctionCall]","[ClassDefinition, +, print(), ReturnStatement, FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, =, init()]"
ps_python_class_point,"[Importing, DefiningObjectMethod, Multiplication, DefiningClass, Addition, AssigningValueVariable, Substraction, CallingLibraryFunction]","[ClassDefinition, +, FunctionDefinition, ReturnStatement, *, ImportStatement, -, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, =, FunctionCall, init()]"
ps_python_comparisons,"[BooleanEvaluating, AssigningValueVariable, Printing, CallingLibraryFunction]","[Larger, ComparisonExpression, FunctionCall, print(), SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, =]"
ps_python_conditionals_temperature,"[IfElifChecking, NestedIfChecking, Printing, CallingLibraryFunction, BooleanEvaluating]","[print(), LessOrEqual, IfElseStatement, Larger, ComparisonExpression, FunctionCall, StringLiteral, IfElifStatement, ExpressionStatement, BinaryOperation, IntegerLiteral]"
ps_python_dict_filter,"[SingleForLoopIteration, AccessingDictionary, IfCheckingInForLoop, CallingLibraryFunction, Printing, CreatingDictionary, IndexingTuple, ForLoopWithListIndexing, CreatingString, BooleanEvaluating, AssigningValueVariable]","[StringLiteral, ForStatement, print(), IntegerLiteral, Larger, items(), ComparisonExpression, IfStatement, FunctionCall, DictLiteral, ExpressionStatement, BinaryOperation, IndexingExpression]"
ps_python_dict_keys,"[SingleForLoopIteration, AccessingDictionary, IfCheckingInForLoop, CallingLibraryFunction, Printing, CreatingDictionary, IndexingDictionary, BooleanEvaluating, AssigningValueVariable]","[StringLiteral, ForStatement, print(), IntegerLiteral, Larger, IfStatement, FunctionCall, DictLiteral, ExpressionStatement, BinaryOperation, IndexingExpression, ComparisonExpression]"
ps_python_dict_values,"[SingleForLoopIteration, AccessingDictionary, CallingLibraryFunction, ChangingValueVariable, Printing, ForLoopWith+=, Addition, AssigningValueVariable]","[ForStatement, print(), IntegerLiteral, AugmentedAssignmentStatement, in, FunctionCall, values(), SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, +, =]"
ps_python_for_odd_or_even,"[SingleForLoopIteration, FindRemainder, CallingLibraryFunction, Printing, IfElseCheckingInForLoop, BooleanEvaluating]","[ForStatement, ==, print(), IntegerLiteral, IfElseStatement, ComparisonExpression, in, Modulus, FunctionCall, StringLiteral, ExpressionStatement, BinaryOperation]"
ps_python_iteration_addition,"[SingleWhileLoopIteration, Addition, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, ChangingValueVariable, Printing, WhileLoopWith+=]","[+, WhileStatement, print(), IntegerLiteral, Less, ComparisonExpression, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, =]"
ps_python_iteration_multiplication,"[SingleWhileLoopIteration, Multiplication, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, Printing, WhileLoopWith*=, ChangingValueVariable]","[WhileStatement, print(), IntegerLiteral, Less, *, ComparisonExpression, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, =, StringLiteral]"
ps_python_list_iteration_zoo,"[SingleForLoopIteration, AssigningValueVariable, CallingLibraryFunction, Printing, CreatingList]","[ForStatement, print(), in, ListLiteral, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, =]"
ps_python_list_to_dict,"[AccessingDictionary, AssigningValueVariable, CallingLibraryFunction, Printing, CreatingDictionary, IndexingDictionary, CreatingTuple, CreatingList]","[DictLiteral, print(), dict(), TupleLiteral, get(), ListLiteral, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, =]"
ps_python_modulo_is_even,"[DefiningSimpleFunction, FindRemainder, IfElseChecking, BooleanEvaluating]","[ReturnStatement, IntegerLiteral, BooleanLiteral, IfElseStatement, ComparisonExpression, Modulus, FunctionDefinition, BinaryOperation, ==]"
ps_python_nested_calls,"[Multiplication, NestedFunctionCall, Addition, CallingLibraryFunction, Printing, DefiningSimpleFunction]","[+, print(), ReturnStatement, IntegerLiteral, *, FunctionCall, FunctionDefinition, ExpressionStatement, BinaryOperation]"
ps_python_nested_ifs,"[CallingLibraryFunction, BooleanEvaluating, Printing, IfElifChecking, NestedIfChecking]","[print(), Less, LessOrEqual, IfElseStatement, ComparisonExpression, FunctionCall, StringLiteral, IfElifStatement, ExpressionStatement, BinaryOperation, IntegerLiteral, ==]"
ps_python_nested_lists_indexing,"[Indexing2DArray, AssigningValueVariable, Create2DArray, CallingLibraryFunction, Printing, IndexingList]","[ListLiteral, IntegerLiteral, FunctionCall, print(), SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, =]"
ps_python_nested_loops,"[NestedWhileLoopIteration, Addition, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, ChangingValueVariable, Printing, WhileLoopWith+=, Substraction]","[+, WhileStatement, print(), IntegerLiteral, Less, Larger, ComparisonExpression, FunctionCall, -, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, =]"
ps_python_printing_file_contents,"[ClosingFile, SingleWhileLoopIteration, AssigningValueVariable, CallingLibraryFunction, ReadingLine, HandlingSpecificError, Printing, OpeningFile, BooleanEvaluating]","[TryStatement, NotEqual, WhileStatement, open(), print(), close(), ComparisonExpression, OSError, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, =, readline()]"
ps_python_recursive_factorial,"[IfElseChecking, DefiningRecursiveFunction, BooleanEvaluating, Multiplication, CallingRecursiveFunction, Substraction]","[FunctionDefinition, ReturnStatement, IntegerLiteral, Less, *, IfElseStatement, ComparisonExpression, FunctionCall, -, BinaryOperation]"
ps_python_string_indexing,"[Printing, CallingLibraryFunction, IndexingString, SlicingString, CreatingString, AssigningValueVariable]","[FunctionCall, StringLiteral, print(), ExpressionStatement, UnaryOperation, IndexingExpression, SlicingExpression, IntegerLiteral]"
ps_python_string_join,"[CapitalizeString, AssigningValueVariable, CallingLibraryFunction, Printing, CreatingList, Concatenation, NestedFunctionCall]","[join(), +, print(), capitalize(), ListLiteral, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, =]"
ps_python_swap,"[SwappingValueVariables, AssigningValueVariable]","[SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, =]"
ps_python_try_adding,"[Addition, CallingLibraryFunction, HandlingSpecificError, Printing, DefiningSimpleFunction]","[TryStatement, +, print(), ReturnStatement, TypeError, FunctionCall, FunctionDefinition, ExpressionStatement, BinaryOperation, StringLiteral]"
ps_python_try_except,"[Multiplication, CallingSimpleFunction, Addition, CallingLibraryFunction, BooleanEvaluating, HandlingSpecificError, Printing, DefiningSimpleFunction, IfChecking]","[TryStatement, FunctionDefinition, FloatLiteral, print(), ReturnStatement, Less, *, ComparisonExpression, ValueError, IfStatement, FunctionCall, StringLiteral, RaiseStatement, ExpressionStatement, BinaryOperation, +]"
ps_python_xor,"[IfElifElseChecking, BooleanEvaluating, Printing, CallingLibraryFunction]","[print(), IfElifElseStatement, IntegerLiteral, ComparisonExpression, FunctionCall, and, ExpressionStatement, BinaryOperation, ==, BooleanOperation]"
ps_return_bigger_or_none,"[DefiningSimpleFunction, BooleanEvaluating, IfElifChecking]","[ReturnStatement, Less, Larger, ComparisonExpression, NoneLiteral, IfElifStatement, FunctionDefinition, BinaryOperation, PassStatement]"
ps_simple_function,"[DefiningSimpleFunction, CallingSimpleFunction, Printing, CallingLibraryFunction]","[FunctionCall, StringLiteral, FunctionDefinition, print(), ExpressionStatement]"
ps_simple_params,"[CallingSimpleFunction, Addition, CallingLibraryFunction, Printing, DefiningSimpleFunction, NestedFunctionCall]","[+, print(), ReturnStatement, IntegerLiteral, FunctionCall, FunctionDefinition, ExpressionStatement, BinaryOperation]"
py_account2,"[DefiningObjectMethod, Multiplication, DefiningClass, IfChecking, CreatingObject, AssigningValueVariable, Addition, FormattingString, CallingLibraryFunction, CreatingString, BooleanEvaluating, Printing, CallingObjectMethod, Substraction]","[ClassDefinition, +, FunctionDefinition, FloatLiteral, print(), ReturnStatement, IntegerLiteral, AugmentedAssignmentStatement, =, *, Larger, format(), LargerOrEqual, StringLiteral, -, and, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IfStatement, ComparisonExpression, FunctionCall, Less, BooleanOperation]"
py_adjacent_consecutive,"[SingleWhileLoopIteration, TransformingToIntType, AssigningValueVariable, HandlingInput, BooleanEvaluating, Printing, IfCheckingInWhileLoop, Substraction, CallingLibraryFunction]","[NotEqual, WhileStatement, print(), BinaryOperation, int(), =, input(), ComparisonExpression, IfStatement, FunctionCall, -, SimpleAssignmentStatement, ExpressionStatement, IntegerLiteral, StringLiteral, ==, and, BooleanOperation]"
py_adjacent_greater,"[SingleWhileLoopIteration, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing, IfCheckingInWhileLoop, ChangingValueVariable, CreatingString, TransformingToFloatType]","[NotEqual, WhileStatement, print(), IntegerLiteral, =, float(), input(), Larger, ComparisonExpression, IfStatement, FunctionCall, StringLiteral, and, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, BooleanOperation]"
py_average_even_nums,"[SingleWhileLoopIteration, IfElseChecking, FindRemainder, AssigningValueVariable, HandlingInput, BooleanEvaluating, ChangingValueVariable, Printing, IfCheckingInWhileLoop, Division, WhileLoopWith+=, TransformingToIntType]","[NotEqual, +, WhileStatement, print(), BinaryOperation, int(), AugmentedAssignmentStatement, =, input(), IfElseStatement, ComparisonExpression, /, IfStatement, Modulus, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, IntegerLiteral, StringLiteral, ==]"
py_average_float,"[SingleWhileLoopIteration, TransformingToFloatType, IfElseChecking, Addition, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, ChangingValueVariable, Printing, Division, WhileLoopWith+=, CreatingString]","[+, WhileStatement, FloatLiteral, print(), IntegerLiteral, AugmentedAssignmentStatement, =, float(), input(), IfElseStatement, ComparisonExpression, LargerOrEqual, /, BinaryOperation, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, UnaryOperation, ==]"
py_average_list_elements,"[SingleForLoopIteration, FindingLength, IfElseChecking, Addition, AssigningValueVariable, CallingLibraryFunction, ChangingValueVariable, BooleanEvaluating, Printing, DefiningSimpleFunction, CreatingList, Division, ForLoopWith+=, CallingSimpleFunction]","[ForStatement, +, print(), AugmentedAssignmentStatement, =, IfElseStatement, /, ComparisonExpression, len(), BinaryOperation, ListLiteral, FunctionCall, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, IntegerLiteral, StringLiteral, ==]"
py_bmi_calculator,"[TransformingToFloatType, Multiplication, AssigningValueVariable, HandlingInput, CallingLibraryFunction, Printing, Power, Division]","[print(), **, input(), *, float(), /, BinaryOperation, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, =, IntegerLiteral]"
py_bmi_calculator2,"[TransformingToFloatType, Multiplication, AssigningValueVariable, HandlingInput, CallingLibraryFunction, ChangingValueVariable, Printing, Power, Division, Round]","[round(), print(), IntegerLiteral, **, float(), input(), *, /, BinaryOperation, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, =]"
py_boolean_dry_hot,"[TransformingToIntType, IfElseChecking, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing, CreatingString]","[print(), int(), =, BooleanLiteral, IfElseStatement, input(), ComparisonExpression, FunctionCall, StringLiteral, and, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IntegerLiteral, ==, BooleanOperation]"
py_boolean_dry_hot2,"[TransformingToIntType, IfElseChecking, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing, CreatingString]","[or, print(), int(), =, BooleanLiteral, IfElseStatement, input(), ComparisonExpression, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IntegerLiteral, ==, BooleanOperation]"
py_boolean_dry_hot3,"[TransformingToIntType, IfElseChecking, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing, CreatingString]","[not, print(), int(), =, BooleanLiteral, IfElseStatement, input(), ComparisonExpression, FunctionCall, StringLiteral, and, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, UnaryOperation, IntegerLiteral, ==, BooleanOperation]"
py_boolean_dry_hot4,"[TransformingToIntType, IfElseChecking, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing, CreatingString]","[not, or, print(), int(), =, BooleanLiteral, IfElseStatement, input(), ComparisonExpression, FunctionCall, StringLiteral, and, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IntegerLiteral, ==, BooleanOperation]"
py_char_dict,"[SingleForLoopIteration, AccessingDictionary, Addition, HandlingInput, AssigningValueVariable, CallingLibraryFunction, ChangingValueVariable, Printing, CheckingForItem, DefiningSimpleFunction, CreatingDictionary, IfElseCheckingInForLoop, IndexingDictionary, ForLoopWith+=, ChangingValueDictionaryElement, CallingSimpleFunction, BooleanEvaluating, CreatingString]","[ForStatement, print(), =, IfElseStatement, input(), DictLiteral, in, BinaryOperation, FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, +, IntegerLiteral, AugmentedAssignmentStatement, AddingItemToDictionary]"
py_check_adjacent,"[SingleWhileLoopIteration, TransformingToFloatType, AssigningValueVariable, HandlingInput, BooleanEvaluating, Printing, IfCheckingInWhileLoop, CallingLibraryFunction]","[NotEqual, WhileStatement, print(), =, float(), input(), ComparisonExpression, IfStatement, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, UnaryOperation, IntegerLiteral, StringLiteral, ==]"
py_check_age,"[TransformingToIntType, IfElseChecking, AssigningValueVariable, HandlingInput, CallingLibraryFunction, CreatingString, BooleanEvaluating, HandlingSpecificError, SplittingString, Printing, DefiningSimpleFunction, Concatenation, IndexingList, NestedFunctionCall, CallingSimpleFunction]","[TryStatement, +, print(), LessOrEqual, int(), =, IfElseStatement, input(), IndexError, ComparisonExpression, split(), LargerOrEqual, ValueError, BinaryOperation, FunctionCall, FunctionDefinition, and, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, IntegerLiteral, StringLiteral, BooleanOperation]"
py_check_age2,"[SingleWhileLoopIteration, TransformingToIntType, CallingSimpleFunction, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, HandlingSpecificError, SplittingString, Printing, IfElseCheckingInWhileLoop, DefiningSimpleFunction, Concatenation, IndexingList, WhileLoopWithListIndexing, CreatingString]","[WhileStatement, split(), TryStatement, +, LessOrEqual, =, LargerOrEqual, BinaryOperation, FunctionCall, and, int(), input(), IfElseStatement, FunctionDefinition, print(), BooleanLiteral, IndexError, ComparisonExpression, ValueError, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, IntegerLiteral, not]"
py_check_product_code,"[SingleWhileLoopIteration, Addition, HandlingInput, AssigningValueVariable, CallingLibraryFunction, ChangingValueVariable, HandlingSpecificError, BooleanEvaluating, Printing, DefiningSimpleFunction, IfCheckingInWhileLoop, IndexingString, WhileLoopWithListIndexing, WhileLoopWith+=, IfChecking, CallingSimpleFunction]","[TryStatement, +, NotEqual, WhileStatement, print(), BinaryOperation, AugmentedAssignmentStatement, =, input(), IndexError, ComparisonExpression, IfStatement, FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, IntegerLiteral, ==]"
py_check_product_code2,"[SingleWhileLoopIteration, TransformingToIntType, CallingSimpleFunction, AssigningValueVariable, HandlingInput, Addition, CallingLibraryFunction, ChangingValueVariable, HandlingSpecificError, BooleanEvaluating, Printing, DefiningSimpleFunction, IfCheckingInWhileLoop, IndexingString, SlicingString, WhileLoopWithListIndexing, WhileLoopWith+=, IfChecking]","[NotEqual, WhileStatement, AugmentedAssignmentStatement, IfStatement, TryStatement, +, =, LargerOrEqual, BinaryOperation, FunctionCall, and, int(), input(), FunctionDefinition, print(), IndexError, ComparisonExpression, ValueError, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, SlicingExpression, IntegerLiteral, ==, BooleanOperation]"
py_concat_char_two_str,"[CallingLibraryFunction, CreatingString, Printing, DefiningSimpleFunction, Concatenation, IndexingString, SlicingString, CallingSimpleFunction]","[+, print(), ReturnStatement, BinaryOperation, FunctionCall, StringLiteral, FunctionDefinition, ExpressionStatement, IndexingExpression, SlicingExpression, =]"
py_concat_char_two_str2,"[AssigningValueVariable, CallingLibraryFunction, CreatingString, Printing, DefiningSimpleFunction, Concatenation, SlicingString, NestedFunctionCall, CallingSimpleFunction]","[+, print(), ReturnStatement, =, FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, SlicingExpression]"
py_concat_str_num,"[Addition, AssigningValueVariable, CallingLibraryFunction, CreatingString, Printing, Concatenation, NestedFunctionCall, TransformingToStringType]","[+, print(), IntegerLiteral, BinaryOperation, FunctionCall, StringLiteral, str(), SimpleAssignmentStatement, ExpressionStatement, =]"
py_concat_str_num2,"[Multiplication, Addition, AssigningValueVariable, CallingLibraryFunction, CreatingString, TransformingToStringType, Printing, Concatenation, NestedFunctionCall]","[+, print(), IntegerLiteral, *, BinaryOperation, FunctionCall, StringLiteral, str(), SimpleAssignmentStatement, ExpressionStatement, =]"
py_concat_string_num3,"[Addition, AssigningValueVariable, CallingLibraryFunction, CreatingString, TransformingToStringType, Printing, Concatenation, NestedFunctionCall]","[+, print(), IntegerLiteral, =, BinaryOperation, FunctionCall, StringLiteral, str(), SimpleAssignmentStatement, ExpressionStatement]"
py_digits,"[SingleWhileLoopIteration, FindRemainder, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, Printing, Division, ChangingValueVariable]","[WhileStatement, print(), IntegerLiteral, =, ComparisonExpression, BinaryOperation, //, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, Larger, Modulus]"
py_display_time2,"[TransformingToIntType, FindRemainder, AssigningValueVariable, HandlingInput, CallingLibraryFunction, Printing, Division]","[print(), IntegerLiteral, int(), input(), BinaryOperation, //, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, =, Modulus]"
py_divisor,"[SingleWhileLoopIteration, FindRemainder, Addition, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, ChangingValueVariable, Printing, WhileLoopWith+=]","[NotEqual, +, WhileStatement, print(), IntegerLiteral, AugmentedAssignmentStatement, ComparisonExpression, BinaryOperation, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement]"
py_f_to_c_conversion,"[Multiplication, TransformingToIntType, Addition, AssigningValueVariable, HandlingInput, CallingLibraryFunction, Printing, Division]","[+, print(), IntegerLiteral, int(), input(), *, /, BinaryOperation, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, =]"
py_fahrenheit_to_celsius,"[Multiplication, TransformingToIntType, AssigningValueVariable, HandlingInput, CallingLibraryFunction, Printing, Division, CreatingString, Substraction]","[print(), IntegerLiteral, int(), *, input(), /, BinaryOperation, FunctionCall, StringLiteral, -, SimpleAssignmentStatement, ExpressionStatement, =]"
py_fail_course,"[TransformingToIntType, IfElseChecking, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing, CreatingString]","[or, print(), Less, int(), =, BooleanLiteral, input(), Larger, IfElseStatement, ComparisonExpression, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, IntegerLiteral, BooleanOperation, ==]"
py_fail_course2,"[TransformingToIntType, IfElseChecking, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing, CreatingString]","[or, print(), IntegerLiteral, Less, int(), =, BooleanLiteral, input(), IfElseStatement, ComparisonExpression, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, ==, BooleanOperation]"
py_fail_course3,"[TransformingToIntType, IfElseChecking, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing, CreatingString]","[not, print(), int(), =, input(), Larger, IfElseStatement, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, UnaryOperation, ==, BooleanLiteral, ComparisonExpression, BooleanOperation]"
py_file_input_stat,"[TransformingToStringType, ClosingFile, FindingLength, AssigningValueVariable, IfCheckingInForLoop, NestedForLoopIteration, Addition, CreatingString, CallingLibraryFunction, BooleanEvaluating, HandlingSpecificError, SplittingString, Printing, ChangingValueVariable, DefiningSimpleFunction, OpeningFile, ForLoopWith+=, NestedFunctionCall, ReadingLine, Concatenation]","[FileNotFoundError, AugmentedAssignmentStatement, split(), TryStatement, ForStatement, +, open(), IntegerLiteral, close(), =, BinaryOperation, FunctionCall, IOError, FunctionDefinition, print(), Larger, ComparisonExpression, len(), StringLiteral, str(), SimpleAssignmentStatement, ExpressionStatement, IfStatement]"
py_find_average,"[SingleWhileLoopIteration, TransformingToIntType, IfElseChecking, AssigningValueVariable, HandlingInput, BooleanEvaluating, ChangingValueVariable, Printing, Division, WhileLoopWith+=, Addition, CallingLibraryFunction]","[NotEqual, +, WhileStatement, print(), int(), AugmentedAssignmentStatement, =, input(), IfElseStatement, ComparisonExpression, /, BinaryOperation, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, IntegerLiteral, StringLiteral, ==]"
py_first_char_words_dict,"[ConvertStringToLowerCase, SingleForLoopIteration, AddingListElementWithAppend, AccessingDictionary, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, SplittingString, Printing, CheckingForItem, DefiningSimpleFunction, CreatingDictionary, CreatingList, IfElseCheckingInForLoop, IndexingDictionary, IndexingString, ChangingValueDictionaryElement, NestedIfChecking, AddingItemToDictionary]","[ForStatement, print(), lower(), =, IfElseStatement, input(), DictLiteral, split(), in, append(), ListLiteral, FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression, IfStatement, not]"
py_if_else_grade,"[TransformingToIntType, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing, IfElifElseChecking, CreatingString]","[print(), IfElifElseStatement, IntegerLiteral, int(), input(), ComparisonExpression, LargerOrEqual, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, =]"
py_if_else_num,"[TransformingToIntType, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing, IfElifElseChecking]","[print(), IfElifElseStatement, Less, int(), input(), Larger, ComparisonExpression, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IntegerLiteral, =]"
py_if_else_wage,"[Multiplication, TransformingToIntType, IfElseChecking, AssigningValueVariable, HandlingInput, Addition, BooleanEvaluating, Printing, Substraction, CallingLibraryFunction]","[+, print(), int(), =, input(), Larger, *, ComparisonExpression, IfElseStatement, BinaryOperation, FunctionCall, -, SimpleAssignmentStatement, ExpressionStatement, UnaryOperation, FloatLiteral, StringLiteral]"
py_if_else_wage2,"[Multiplication, TransformingToIntType, IfElseChecking, Addition, AssigningValueVariable, BooleanEvaluating, ChangingValueVariable, Printing, Substraction, CallingLibraryFunction, HandlingInput]","[+, print(), Less, int(), AugmentedAssignmentStatement, =, *, Larger, IfElseStatement, ComparisonExpression, BinaryOperation, FunctionCall, -, SimpleAssignmentStatement, ExpressionStatement, FloatLiteral, StringLiteral, IntegerLiteral, input()]"
py_ifelse_odd_even,"[TransformingToIntType, FindRemainder, IfElseChecking, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing]","[print(), IntegerLiteral, int(), input(), IfElseStatement, ComparisonExpression, BinaryOperation, Modulus, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, =, ==]"
py_ifelseif_grade2,"[AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing, IfElifElseChecking]","[print(), IfElifElseStatement, input(), ComparisonExpression, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, =, ==]"
py_input,"[SingleWhileLoopIteration, TransformingToIntType, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing]","[WhileStatement, print(), IntegerLiteral, int(), input(), ComparisonExpression, LargerOrEqual, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, =]"
py_input2,"[SingleWhileLoopIteration, TransformingToIntType, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing]","[WhileStatement, print(), IntegerLiteral, LessOrEqual, int(), input(), ComparisonExpression, LargerOrEqual, FunctionCall, StringLiteral, and, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, =, BooleanOperation]"
py_input3,"[SingleWhileLoopIteration, TransformingToIntType, AssigningValueVariable, HandlingInput, CallingLibraryFunction, CreatingString, BooleanEvaluating, Printing]","[WhileStatement, print(), IntegerLiteral, LessOrEqual, int(), =, input(), ComparisonExpression, LargerOrEqual, FunctionCall, StringLiteral, and, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, BooleanOperation]"
py_input4,"[SingleWhileLoopIteration, TransformingToIntType, FindRemainder, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing, CreatingString]","[NotEqual, or, WhileStatement, print(), int(), =, input(), ComparisonExpression, LargerOrEqual, BinaryOperation, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, IntegerLiteral, Modulus, StringLiteral, BooleanOperation]"
py_input_stat2,"[TransformingToStringType, ClosingFile, SingleWhileLoopIteration, NestedFunctionCall, FindingLength, AssigningValueVariable, HandlingInput, NestedForLoopIteration, IfCheckingInForLoop, CreatingString, Addition, CallingLibraryFunction, BooleanEvaluating, HandlingSpecificError, SplittingString, Printing, DefiningSimpleFunction, OpeningFile, ForLoopWith+=, ChangingValueVariable, SingleForLoopIteration, ReadingLine, Concatenation]","[WhileStatement, FileNotFoundError, AugmentedAssignmentStatement, split(), TryStatement, ForStatement, +, open(), IntegerLiteral, close(), =, BinaryOperation, FunctionCall, IOError, input(), FunctionDefinition, not, print(), ReturnStatement, BooleanLiteral, Larger, ComparisonExpression, len(), StringLiteral, str(), SimpleAssignmentStatement, ExpressionStatement, UnaryOperation, IfStatement, BooleanOperation]"
py_largest_divisor,"[SingleWhileLoopIteration, FindRemainder, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, ChangingValueVariable, Printing, Substraction]","[NotEqual, WhileStatement, print(), IntegerLiteral, AugmentedAssignmentStatement, ComparisonExpression, BinaryOperation, Modulus, FunctionCall, StringLiteral, -, SimpleAssignmentStatement, ExpressionStatement, =]"
py_list2d_basic,"[AssigningValueVariable, Create2DArray, Printing, ChangingValueListElement, ChangingValue2DArrayElement, CallingLibraryFunction]","[ListLiteral, FunctionCall, =, print(), SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression, IntegerLiteral]"
py_list2d_basic2,"[AssigningValueVariable, Create2DArray, Printing, ChangingValueListElement, ChangingValue2DArrayElement, CallingLibraryFunction]","[ListLiteral, FunctionCall, =, print(), SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, IntegerLiteral]"
py_list2d_basic3,"[AssigningValueVariable, Create2DArray, CallingLibraryFunction, Printing, ChangingValueListElement, ChangingValue2DArrayElement]","[print(), IntegerLiteral, =, ListLiteral, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression]"
py_list_basic,"[CreatingList, AssigningValueVariable, Printing, ChangingValueListElement, CallingLibraryFunction]","[ListLiteral, FunctionCall, =, print(), SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, IntegerLiteral]"
py_list_basic2,"[CreatingList, AssigningValueVariable, Printing, ChangingValueListElement, CallingLibraryFunction]","[ListLiteral, FunctionCall, =, print(), SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, FloatLiteral]"
py_list_basic3,"[CreatingList, AssigningValueVariable, Printing, CallingLibraryFunction, ChangingValueListElement]","[print(), =, ListLiteral, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression]"
py_list_change,"[SingleForLoopIteration, FindingLength, Addition, AssigningValueVariable, CallingLibraryFunction, ChangingValueVariable, Printing, CreatingList, ForLoopWithListIndexing, ForLoopWith+=, ChangingValueListElement]","[+, ForStatement, range(), print(), AugmentedAssignmentStatement, =, len(), BinaryOperation, ListLiteral, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, IntegerLiteral]"
py_list_fill,"[SingleForLoopIteration, AddingListElementWithAppend, Multiplication, Addition, AssigningValueVariable, CallingLibraryFunction, Printing, CreatingList, ForLoopWith*=, ForLoopWith+=]","[+, ForStatement, range(), print(), =, *, BinaryOperation, ListLiteral, FunctionCall, append(), SimpleAssignmentStatement, ExpressionStatement, IntegerLiteral]"
py_list_fill_user_input,"[SingleForLoopIteration, AddingListElementWithAppend, AssigningValueVariable, HandlingInput, CallingLibraryFunction, Printing, CreatingList]","[ForStatement, range(), print(), =, input(), ListLiteral, FunctionCall, append(), ExpressionStatement, StringLiteral]"
py_list_min,"[SingleForLoopIteration, FindingLength, AssigningValueVariable, IfCheckingInForLoop, CallingLibraryFunction, BooleanEvaluating, Printing, CreatingList, IndexingList, ForLoopWithListIndexing, NestedFunctionCall, ChangingValueVariable]","[ForStatement, range(), print(), IntegerLiteral, Less, =, ComparisonExpression, len(), IfStatement, ListLiteral, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression]"
py_list_min_max,"[SingleForLoopIteration, FindingLength, AssigningValueVariable, IfCheckingInForLoop, CallingLibraryFunction, BooleanEvaluating, ChangingValueVariable, Printing, CreatingList, IndexingList, ForLoopWithListIndexing]","[ForStatement, range(), print(), IntegerLiteral, BinaryOperation, =, Larger, ComparisonExpression, len(), IfStatement, ListLiteral, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, StringLiteral]"
py_list_process_elements,"[SingleForLoopIteration, Addition, AssigningValueVariable, CallingLibraryFunction, ChangingValueVariable, Printing, DefiningSimpleFunction, CreatingList, IndexingList, ForLoopWith+=, CallingSimpleFunction]","[ForStatement, +, print(), AugmentedAssignmentStatement, =, BinaryOperation, ListLiteral, FunctionCall, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, IntegerLiteral, StringLiteral]"
py_list_rotate,"[SingleForLoopIteration, FindingLength, AssigningValueVariable, CallingLibraryFunction, Printing, DefiningSimpleFunction, CreatingList, ForLoopWithListIndexing, ForLoopWith+=, ChangingValueListElement, Substraction, NestedFunctionCall, CallingSimpleFunction, Addition]","[ForStatement, range(), print(), ReturnStatement, =, -, len(), BinaryOperation, ListLiteral, FunctionCall, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, IntegerLiteral, +]"
py_list_rotate_left_twice,"[SingleForLoopIteration, FindingLength, Addition, AssigningValueVariable, CallingLibraryFunction, Printing, DefiningSimpleFunction, CreatingList, ForLoopWithListIndexing, ChangingValueListElement, Substraction, CallingSimpleFunction]","[+, ForStatement, range(), print(), ReturnStatement, =, -, len(), BinaryOperation, ListLiteral, FunctionCall, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, StringLiteral]"
py_list_rotate_right,"[SingleForLoopIteration, FindingLength, AssigningValueVariable, CallingLibraryFunction, Printing, DefiningSimpleFunction, CreatingList, ForLoopWithListIndexing, ChangingValueListElement, Substraction, CreatingString, CallingSimpleFunction]","[ForStatement, FunctionDefinition, range(), print(), ReturnStatement, IntegerLiteral, =, len(), BinaryOperation, ListLiteral, FunctionCall, -, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, StringLiteral]"
py_list_rotate_right_twice,"[SingleForLoopIteration, FindingLength, AssigningValueVariable, CallingLibraryFunction, Printing, DefiningSimpleFunction, CreatingList, ForLoopWithListIndexing, ChangingValueListElement, NestedFunctionCall, Substraction, CallingSimpleFunction]","[ForStatement, FunctionDefinition, range(), print(), ReturnStatement, IntegerLiteral, =, len(), BinaryOperation, ListLiteral, FunctionCall, -, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, ComparisonExpression]"
py_list_swap_adjacent_elements,"[SingleForLoopIteration, FindingLength, Addition, AssigningValueVariable, CallingLibraryFunction, SwappingValueVariables, Printing, CreatingList, ForLoopWithListIndexing, ChangingValueListElement]","[+, ForStatement, range(), print(), =, len(), BinaryOperation, ListLiteral, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, IntegerLiteral]"
py_loan2,"[DefiningObjectMethod, TransformingToFloatType, DefiningClass, TransformingToIntType, Multiplication, Addition, AssigningValueVariable, HandlingInput, FormattingString, CreatingObject, CallingLibraryFunction, Printing, Power, Division, CallingObjectMethod]","[ClassDefinition, +, FunctionDefinition, print(), ReturnStatement, int(), =, **, *, float(), input(), /, format(), FunctionCall, -, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
py_nested_if_max_of_three,"[TransformingToIntType, IfElseChecking, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing, NestedIfChecking]","[print(), int(), IfElseStatement, Larger, input(), ComparisonExpression, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, =]"
py_nested_if_min_max,"[TransformingToIntType, IfElseChecking, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing, NestedIfChecking]","[print(), Less, int(), IfElseStatement, input(), ComparisonExpression, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, =]"
py_nested_if_temperature,"[TransformingToFloatType, IfElseChecking, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing, NestedIfChecking]","[print(), Less, float(), Larger, input(), ComparisonExpression, IfElseStatement, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, =]"
py_nested_if_temperature2,"[TransformingToFloatType, IfElseChecking, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing, NestedIfChecking, CreatingString]","[print(), IfElifElseStatement, Less, float(), input(), Larger, ComparisonExpression, IfElseStatement, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, =]"
objects_classes_account,"[DefiningObjectMethod, Printing, BooleanEvaluating, IfChecking, CreatingObject, Multiplication, NestedFunctionCall, Substraction, CallingObjectMethod, AssigningValueVariable, Addition, DefiningClass, ChangingValueVariable, FormattingString, CallingLibraryFunction]","[format(), *, ComparisonExpression, Larger, FunctionCall, and, BinaryOperation, =, SimpleAssignmentStatement, StringLiteral, print(), +, FunctionDefinition, LargerOrEqual, -, UnaryOperation, ExpressionStatement, ReturnStatement, FloatLiteral, ClassDefinition, AugmentedAssignmentStatement, IntegerLiteral, IfStatement]"
py_phone_age,"[TransformingToIntType, IfElseChecking, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing, CreatingString]","[or, print(), IntegerLiteral, int(), =, BooleanLiteral, input(), IfElseStatement, ComparisonExpression, LargerOrEqual, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, ==, BooleanOperation]"
py_phone_age2,"[TransformingToIntType, IfElseChecking, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing, CreatingString]","[not, or, print(), IntegerLiteral, int(), =, BooleanLiteral, input(), IfElseStatement, ComparisonExpression, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, UnaryOperation, ==, BooleanOperation]"
py_point2,"[CallingObjectMethod, DefiningObjectMethod, Multiplication, DefiningClass, CreatingObject, AssigningValueVariable, Addition, CallingLibraryFunction, CreatingString, TransformingToStringType, Printing, Power, Concatenation, NestedFunctionCall]","[ClassDefinition, +, print(), ReturnStatement, =, **, *, FunctionCall, StringLiteral, FunctionDefinition, str(), SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, UnaryOperation]"
py_print_medals,"[SingleForLoopIteration, Indexing2DArray, FindingLength, AssigningValueVariable, Addition, Create2DArray, FormattingString, CallingLibraryFunction, ChangingValueVariable, Printing, IndexingList, ForLoopWithListIndexing, ForLoopWith+=, NestedFunctionCall, NestedForLoopIteration, CreatingString]","[+, ForStatement, range(), print(), AugmentedAssignmentStatement, =, format(), len(), BinaryOperation, ListLiteral, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, IntegerLiteral]"
py_print_medals_row_column_total,"[SingleForLoopIteration, Indexing2DArray, FindingLength, AssigningValueVariable, Addition, Create2DArray, FormattingString, CallingLibraryFunction, CreatingString, ChangingValueVariable, Printing, CreatingList, ForLoopWithListIndexing, ForLoopWith+=, ChangingValueListElement, Substraction, NestedFunctionCall, NestedForLoopIteration, Multiplication]","[ForStatement, +, print(), AugmentedAssignmentStatement, =, format(), len(), BinaryOperation, ListLiteral, FunctionCall, StringLiteral, -, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, range(), *]"
py_pythagorean_theorem,"[TransformingToFloatType, Addition, HandlingInput, AssigningValueVariable, CallingLibraryFunction, Printing, Power]","[+, FloatLiteral, print(), IntegerLiteral, **, float(), input(), BinaryOperation, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, UnaryOperation, =]"
py_pythagorean_theorem2,"[TransformingToFloatType, AssigningValueVariable, HandlingInput, CallingLibraryFunction, Printing, Power, Substraction]","[FloatLiteral, print(), **, input(), float(), BinaryOperation, FunctionCall, StringLiteral, -, SimpleAssignmentStatement, ExpressionStatement, IntegerLiteral, +, =]"
py_range1_2,"[SingleForLoopIteration, Printing, CallingLibraryFunction]","[ForStatement, range(), print(), IntegerLiteral, FunctionCall, ExpressionStatement]"
py_range2_2,"[SingleForLoopIteration, Printing, CallingLibraryFunction]","[ForStatement, range(), print(), IntegerLiteral, FunctionCall, ExpressionStatement]"
py_range3_2,"[SingleForLoopIteration, Printing, CallingLibraryFunction]","[ForStatement, range(), print(), IntegerLiteral, FunctionCall, ExpressionStatement]"
py_range_one,"[SingleForLoopIteration, Printing, CallingLibraryFunction]","[ForStatement, range(), print(), IntegerLiteral, FunctionCall, ExpressionStatement]"
py_range_three,"[SingleForLoopIteration, Printing, CallingLibraryFunction]","[ForStatement, range(), print(), IntegerLiteral, FunctionCall, ExpressionStatement]"
py_range_two,"[SingleForLoopIteration, Printing, CallingLibraryFunction]","[ForStatement, range(), print(), IntegerLiteral, FunctionCall, ExpressionStatement]"
py_rent_car,"[TransformingToIntType, IfElseChecking, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing, CreatingString]","[print(), IntegerLiteral, int(), =, BooleanLiteral, input(), IfElseStatement, ComparisonExpression, LargerOrEqual, FunctionCall, StringLiteral, and, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, ==, BooleanOperation]"
py_rent_car2,"[TransformingToIntType, IfElseChecking, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing]","[not, print(), IntegerLiteral, int(), =, BooleanLiteral, input(), IfElseStatement, ComparisonExpression, LargerOrEqual, FunctionCall, StringLiteral, and, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, UnaryOperation, ==, BooleanOperation]"
py_rent_car3,"[TransformingToIntType, IfElseChecking, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing, CreatingString]","[or, print(), IntegerLiteral, int(), =, BooleanLiteral, input(), IfElseStatement, ComparisonExpression, LargerOrEqual, FunctionCall, and, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, BooleanOperation, ==, StringLiteral]"
py_repeated_sequence,"[TransformingToIntType, Addition, HandlingInput, AssigningValueVariable, NestedForLoopIteration, CallingLibraryFunction, Printing, NestedFunctionCall]","[ForStatement, +, range(), print(), IntegerLiteral, int(), input(), BinaryOperation, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, =]"
py_repeated_sequence2,"[TransformingToIntType, Addition, HandlingInput, AssigningValueVariable, NestedForLoopIteration, CallingLibraryFunction, Printing, CreatingString, NestedFunctionCall]","[ForStatement, +, range(), print(), IntegerLiteral, int(), input(), BinaryOperation, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, =, StringLiteral]"
py_reverse_number,"[SingleWhileLoopIteration, Multiplication, FindRemainder, Addition, AssigningValueVariable, CallingLibraryFunction, Printing, Division, ChangingValueVariable, CreatingString]","[+, WhileStatement, print(), IntegerLiteral, =, *, Larger, ComparisonExpression, BinaryOperation, //, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, Modulus, StringLiteral]"
py_score_dict2,"[SingleForLoopIteration, NestedFunctionCall, FindingLength, AccessingDictionary, AssigningValueVariable, Addition, CallingLibraryFunction, BooleanEvaluating, ChangingValueVariable, Printing, CheckingForItem, DefiningSimpleFunction, CreatingDictionary, CreatingList, Division, AddingItemToDictionary, IndexingDictionary, IndexingList, ForLoopWithListIndexing, ForLoopWith+=, ChangingValueDictionaryElement, AddingListElementWithAppend, IfElseCheckingInForLoop]","[StringLiteral, ForStatement, +, range(), print(), ReturnStatement, IntegerLiteral, =, DictLiteral, /, in, len(), BinaryOperation, ListLiteral, FunctionCall, append(), FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, IfElseStatement, BooleanOperation, AugmentedAssignmentStatement]"
py_search_list,"[SingleForLoopIteration, IfCheckingInForLoop, CallingLibraryFunction, BooleanEvaluating, Printing, CheckingForItem, DefiningSimpleFunction, CreatingList, IndexingList, CallingSimpleFunction]","[ForStatement, print(), =, in, IfStatement, ListLiteral, FunctionCall, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, FloatLiteral, StringLiteral, IntegerLiteral]"
py_search_list_count_each,"[FindingLength, AssigningValueVariable, IfCheckingInForLoop, NestedForLoopIteration, CallingLibraryFunction, BooleanEvaluating, ChangingValueVariable, Printing, DefiningSimpleFunction, CreatingList, ForLoopWith+=, ChangingValueListElement, Addition, CreatingString, CallingSimpleFunction, Multiplication]","[ForStatement, +, ==, FloatLiteral, print(), IntegerLiteral, BinaryOperation, AugmentedAssignmentStatement, =, *, ComparisonExpression, in, len(), IfStatement, ListLiteral, FunctionCall, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, index()]"
py_search_list_total_count,"[SingleForLoopIteration, AssigningValueVariable, NestedForLoopIteration, IfCheckingInForLoop, Addition, CallingLibraryFunction, ChangingValueVariable, BooleanEvaluating, Printing, DefiningSimpleFunction, CreatingList, ForLoopWith+=, CallingSimpleFunction]","[IfStatement, ForStatement, +, print(), AugmentedAssignmentStatement, =, ComparisonExpression, BinaryOperation, ListLiteral, FunctionCall, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, UnaryOperation, IntegerLiteral, ==]"
py_soda_survey,"[SingleForLoopIteration, Indexing2DArray, Multiplication, FindingLength, AssigningValueVariable, NestedForLoopIteration, Create2DArray, IfCheckingInForLoop, FormattingString, Addition, CallingLibraryFunction, BooleanEvaluating, Printing, ForLoopWithListIndexing, ChangingValueListElement]","[ForStatement, +, range(), print(), BinaryOperation, =, *, format(), ComparisonExpression, len(), IfStatement, ListLiteral, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, Larger]"
py_soda_survey_soda_avg,"[Indexing2DArray, Multiplication, FindingLength, AssigningValueVariable, NestedForLoopIteration, Create2DArray, FormattingString, Addition, CallingLibraryFunction, ChangingValueVariable, Printing, Division, ForLoopWithListIndexing, ForLoopWith+=, ChangingValueListElement, NestedFunctionCall]","[+, ForStatement, range(), print(), AugmentedAssignmentStatement, =, *, format(), /, len(), BinaryOperation, ListLiteral, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, StringLiteral]"
py_soda_survey_soda_respondent_avg,"[SingleForLoopIteration, Indexing2DArray, Multiplication, FindingLength, AssigningValueVariable, NestedForLoopIteration, Create2DArray, Addition, FormattingString, CallingLibraryFunction, ChangingValueVariable, Printing, CreatingList, Division, ForLoopWithListIndexing, ForLoopWith+=, ChangingValueListElement, NestedFunctionCall]","[+, ForStatement, range(), print(), IntegerLiteral, AugmentedAssignmentStatement, =, *, format(), /, len(), BinaryOperation, ListLiteral, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, StringLiteral]"
py_squares,"[SingleForLoopIteration, Multiplication, Printing, CallingLibraryFunction]","[ForStatement, range(), print(), IntegerLiteral, *, BinaryOperation, FunctionCall, ExpressionStatement, StringLiteral]"
py_star_patterns,"[Addition, AssigningValueVariable, NestedForLoopIteration, CallingLibraryFunction, Printing, Concatenation, ForLoopWith+=, CreatingString, NestedFunctionCall, TransformingToIntType, HandlingInput]","[ForStatement, +, print(), IntegerLiteral, BinaryOperation, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, =, range(), int(), input(), StringLiteral]"
py_stars_2,"[SingleForLoopIteration, TransformingToIntType, AssigningValueVariable, HandlingInput, NestedForLoopIteration, Addition, CallingLibraryFunction, Printing, Concatenation, ForLoopWith+=, CreatingString, Substraction, NestedFunctionCall]","[ForStatement, +, range(), print(), IntegerLiteral, int(), input(), BinaryOperation, FunctionCall, StringLiteral, -, SimpleAssignmentStatement, ExpressionStatement, =]"
py_str_count,"[ConvertStringToLowerCase, SingleForLoopIteration, FindingLength, AssigningValueVariable, IfCheckingInForLoop, Addition, CallingLibraryFunction, ChangingValueVariable, BooleanEvaluating, Printing, DefiningSimpleFunction, IndexingString, SlicingString, ForLoopWithListIndexing, ForLoopWith+=, NestedFunctionCall, Substraction, CreatingString, CallingSimpleFunction]","[ForStatement, FunctionDefinition, range(), print(), lower(), BinaryOperation, ReturnStatement, AugmentedAssignmentStatement, =, ComparisonExpression, len(), IfStatement, FunctionCall, StringLiteral, -, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, SlicingExpression, IntegerLiteral, +, ==]"
py_str_count2,"[ConvertStringToLowerCase, SingleForLoopIteration, FindingLength, AssigningValueVariable, IfCheckingInForLoop, Addition, CallingLibraryFunction, BooleanEvaluating, ChangingValueVariable, DefiningSimpleFunction, IndexingString, SlicingString, ForLoopWithListIndexing, ForLoopWith+=, NestedFunctionCall, CreatingString, CallingSimpleFunction, Printing]","[+, ForStatement, FunctionDefinition, range(), print(), lower(), BinaryOperation, ReturnStatement, AugmentedAssignmentStatement, =, ComparisonExpression, len(), IfStatement, FunctionCall, StringLiteral, -, and, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, SlicingExpression, IntegerLiteral, ==, BooleanOperation]"
py_str_repeat2,"[SingleForLoopIteration, Multiplication, FindingLength, AssigningValueVariable, CallingLibraryFunction, CreatingString, ChangingValueVariable, Printing, DefiningSimpleFunction, IndexingString, ForLoopWithListIndexing, ForLoopWith+=, Addition, Concatenation, CallingSimpleFunction]","[ForStatement, +, range(), print(), AugmentedAssignmentStatement, =, *, len(), BinaryOperation, FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, IntegerLiteral]"
py_str_repeat_chars,"[SingleForLoopIteration, Multiplication, AssigningValueVariable, CallingLibraryFunction, CreatingString, ChangingValueVariable, Printing, DefiningSimpleFunction, IndexingString, ForLoopWith+=, Concatenation, Addition, CallingSimpleFunction]","[ForStatement, +, print(), AugmentedAssignmentStatement, =, *, BinaryOperation, FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement]"
py_student_score,"[AddingListElementWithAppend, SingleForLoopIteration, IfElseCheckingInForLoop, FindingLength, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, Printing, CheckingForItem, DefiningSimpleFunction, CreatingDictionary, CreatingList, AddingItemToDictionary, IndexingDictionary, IndexingList, ForLoopWithListIndexing, ChangingValueDictionaryElement, AccessingDictionary, NestedFunctionCall, CallingSimpleFunction]","[ForStatement, range(), print(), ReturnStatement, IntegerLiteral, =, DictLiteral, in, len(), append(), ListLiteral, FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression, IfElseStatement, BooleanOperation]"
py_sum_digits,"[SingleWhileLoopIteration, FindRemainder, Addition, AssigningValueVariable, CallingLibraryFunction, ChangingValueVariable, Printing, Division, WhileLoopWith+=, BooleanEvaluating]","[+, WhileStatement, print(), IntegerLiteral, =, ComparisonExpression, BinaryOperation, //, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, Larger, StringLiteral, Modulus]"
py_temperature,"[SingleForLoopIteration, TransformingToFloatType, AddingListElementWithAppend, TransformingToIntType, IfElseChecking, AssigningValueVariable, HandlingInput, Addition, CallingLibraryFunction, ChangingValueVariable, BooleanEvaluating, Printing, CreatingList, Division, ForLoopWith+=, IfCheckingInForLoop]","[ForStatement, +, range(), print(), BinaryOperation, int(), AugmentedAssignmentStatement, =, input(), IfElseStatement, float(), /, ComparisonExpression, IfStatement, ListLiteral, FunctionCall, append(), SimpleAssignmentStatement, ExpressionStatement, IntegerLiteral, StringLiteral, Larger, ==]"
py_temperature_list_days_above_threshold,"[SingleForLoopIteration, TransformingToFloatType, AddingListElementWithAppend, TransformingToIntType, FindingLength, AssigningValueVariable, HandlingInput, IfCheckingInForLoop, Addition, CallingLibraryFunction, TransformingToStringType, BooleanEvaluating, Printing, CreatingList, Concatenation, IndexingList, ForLoopWithListIndexing, NestedFunctionCall]","[ForStatement, +, range(), print(), BinaryOperation, int(), =, input(), float(), ComparisonExpression, len(), IfStatement, ListLiteral, FunctionCall, append(), str(), SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, IntegerLiteral, StringLiteral, Larger]"
py_three_boolean,"[TransformingToIntType, IfElseChecking, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing, CreatingString]","[or, print(), IntegerLiteral, int(), =, BooleanLiteral, input(), IfElseStatement, ComparisonExpression, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, ==, BooleanOperation]"
py_three_boolean2,"[TransformingToIntType, IfElseChecking, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing, CreatingString]","[not, print(), IntegerLiteral, int(), =, BooleanLiteral, input(), IfElseStatement, ComparisonExpression, FunctionCall, StringLiteral, and, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, UnaryOperation, ==, BooleanOperation]"
py_three_boolean3,"[TransformingToIntType, IfElseChecking, AssigningValueVariable, HandlingInput, CallingLibraryFunction, BooleanEvaluating, Printing, CreatingString]","[print(), int(), =, BooleanLiteral, IfElseStatement, input(), ComparisonExpression, FunctionCall, StringLiteral, and, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IntegerLiteral, ==, BooleanOperation]"
py_time_conversion,"[TransformingToIntType, FindRemainder, AssigningValueVariable, HandlingInput, CallingLibraryFunction, Printing, Division]","[print(), IntegerLiteral, int(), //, input(), BinaryOperation, Modulus, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, =]"
py_tv2,"[DefiningObjectMethod, DefiningClass, IfChecking, CreatingObject, AssigningValueVariable, Addition, CallingLibraryFunction, TransformingToStringType, BooleanEvaluating, ChangingValueVariable, Printing, CallingObjectMethod, CreatingString, Substraction, NestedFunctionCall, Concatenation]","[ClassDefinition, print(), ReturnStatement, Less, LessOrEqual, AugmentedAssignmentStatement, =, BooleanLiteral, Larger, LargerOrEqual, FunctionCall, StringLiteral, FunctionDefinition, str(), and, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, UnaryOperation, IntegerLiteral, IfStatement, ComparisonExpression, BooleanOperation, +]"
py_vending_machine,"[Multiplication, TransformingToIntType, FindRemainder, AssigningValueVariable, HandlingInput, CallingLibraryFunction, ChangingValueVariable, Printing, Division, Substraction]","[print(), IntegerLiteral, int(), //, *, input(), BinaryOperation, Modulus, FunctionCall, StringLiteral, -, SimpleAssignmentStatement, ExpressionStatement, =]"
py_vending_machine2,"[Multiplication, TransformingToIntType, FindRemainder, AssigningValueVariable, HandlingInput, CallingLibraryFunction, ChangingValueVariable, Printing, Division, Substraction]","[print(), IntegerLiteral, int(), *, input(), BinaryOperation, //, FunctionCall, StringLiteral, -, SimpleAssignmentStatement, ExpressionStatement, =, Modulus]"
py_win_percentage,"[SingleWhileLoopIteration, TransformingToIntType, AssigningValueVariable, HandlingInput, BooleanEvaluating, Printing, Division, CallingLibraryFunction]","[or, WhileStatement, print(), Less, int(), =, input(), Larger, ComparisonExpression, /, BinaryOperation, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, IntegerLiteral, StringLiteral, BooleanOperation]"
py_win_percentage_input,"[SingleWhileLoopIteration, TransformingToIntType, AssigningValueVariable, HandlingInput, BooleanEvaluating, Printing, Division, CallingLibraryFunction]","[or, WhileStatement, print(), Less, int(), LessOrEqual, =, input(), Larger, ComparisonExpression, /, BinaryOperation, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, IntegerLiteral, StringLiteral, BooleanOperation]"
py_win_percentage_won_equal,"[SingleWhileLoopIteration, TransformingToIntType, Addition, HandlingInput, AssigningValueVariable, CallingLibraryFunction, CreatingString, BooleanEvaluating, Printing, Division]","[+, or, WhileStatement, print(), IntegerLiteral, Less, int(), =, input(), Larger, ComparisonExpression, /, BinaryOperation, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BooleanOperation, //]"
py_work_hours,"[ClosingFile, SingleForLoopIteration, TransformingToFloatType, FindingLength, AssigningValueVariable, Addition, HandlingInput, NestedForLoopIteration, ReadingLine, CallingLibraryFunction, TransformingToStringType, ChangingValueVariable, HandlingSpecificError, SplittingString, Printing, DefiningSimpleFunction, OpeningFile, Concatenation, ForLoopWithListIndexing, ForLoopWith+=, NestedFunctionCall, CreatingString, CallingSimpleFunction]","[FileNotFoundError, AugmentedAssignmentStatement, split(), TryStatement, +, ForStatement, open(), range(), close(), =, BinaryOperation, FunctionCall, IOError, input(), FunctionDefinition, print(), float(), len(), str(), SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, FloatLiteral, StringLiteral, ValueError]"
py_work_hours2,"[ClosingFile, SingleForLoopIteration, TransformingToFloatType, FindingLength, TransformingToIntType, AssigningValueVariable, Addition, HandlingInput, CallingLibraryFunction, ReadingLine, TransformingToStringType, ChangingValueVariable, HandlingSpecificError, SplittingString, Printing, DefiningSimpleFunction, OpeningFile, Concatenation, ForLoopWithListIndexing, ForLoopWith+=, CreatingString, CallingSimpleFunction, NestedForLoopIteration]","[FileNotFoundError, AugmentedAssignmentStatement, split(), TryStatement, +, ForStatement, open(), range(), close(), =, BinaryOperation, FunctionCall, IOError, int(), input(), FunctionDefinition, print(), float(), len(), str(), SimpleAssignmentStatement, ExpressionStatement, IndexingExpression, FloatLiteral, StringLiteral, ValueError]"
py_write_squares_odd,"[SingleForLoopIteration, Multiplication, Printing, CallingLibraryFunction]","[ForStatement, range(), print(), IntegerLiteral, *, BinaryOperation, FunctionCall, StringLiteral, ExpressionStatement]"
py_write_squares_range,"[SingleForLoopIteration, Multiplication, Printing, CallingLibraryFunction, CreatingString]","[ForStatement, range(), print(), IntegerLiteral, *, BinaryOperation, FunctionCall, ExpressionStatement, StringLiteral]"
q_py_topic_dictionary:q_py_dict_access1,"[AccessingDictionary, AssigningValueVariable, CallingLibraryFunction, Printing, CreatingDictionary, IndexingDictionary]","[StringLiteral, print(), IntegerLiteral, =, FunctionCall, DictLiteral, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression]"
q_py_topic_dictionary:q_py_dict_access2,"[FindingLength, AccessingDictionary, Addition, AssigningValueVariable, CallingLibraryFunction, Printing, CreatingDictionary, AddingItemToDictionary, IndexingDictionary, ChangingValueDictionaryElement, Substraction]","[StringLiteral, +, print(), IntegerLiteral, =, len(), FunctionCall, DictLiteral, -, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression]"
q_py_topic_exceptions:q_py_exception_assertion,"[SingleForLoopIteration, AssertChecking, AddingListElementWithAppend, AssigningValueVariable, ChangingValueVariable, HandlingSpecificError, Printing, DefiningSimpleFunction, CreatingList, ForLoopWith+=, CallingLibraryFunction, CallingSimpleFunction]","[TryStatement, ForStatement, StringLiteral, print(), AssertionError, IntegerLiteral, AugmentedAssignmentStatement, =, ListLiteral, AssertStatement, FunctionCall, append(), FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, +]"
q_py_topic_exceptions:q_py_exceptions_addarr,"[SingleForLoopIteration, FindingLength, Addition, AssigningValueVariable, CallingLibraryFunction, ChangingValueVariable, HandlingSpecificError, Printing, DefiningSimpleFunction, CreatingList, Division, ForLoopWith+=, CallingSimpleFunction]","[TryStatement, +, ForStatement, print(), ReturnStatement, IntegerLiteral, AugmentedAssignmentStatement, =, TypeError, len(), ListLiteral, //, FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
q_py_topic_exceptions:q_py_list_except1,"[HandlingGeneralError, SingleForLoopIteration, Addition, AssigningValueVariable, CallingLibraryFunction, ChangingValueVariable, Printing, CreatingTuple, IndexingTuple, ForLoopWithListIndexing, ForLoopWith+=]","[TryStatement, +, ForStatement, range(), print(), IntegerLiteral, AugmentedAssignmentStatement, =, TupleLiteral, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression]"
q_py_topic_exceptions:q_py_value_except1,"[TransformingToIntType, AssigningValueVariable, CallingLibraryFunction, HandlingSpecificError, Printing, DefiningSimpleFunction, CreatingList, IndexingList, NestedFunctionCall, CallingSimpleFunction]","[TryStatement, print(), int(), =, ValueError, ListLiteral, FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression]"
q_py_topic_file_processing:q_py_file1,"[Importing, AssigningValueVariable, ReadingLine, CallingLibraryFunction, Printing, OpeningFile]","[open(), print(), IntegerLiteral, =, read(), FunctionCall, StringLiteral, ImportStatement, SimpleAssignmentStatement, ExpressionStatement]"
q_py_topic_functions:q_py_fun_car1,"[CallingSimpleFunction, Addition, AssigningValueVariable, CallingLibraryFunction, Printing, DefiningSimpleFunction, FindMinimum, Substraction]","[min(), +, FunctionDefinition, print(), ReturnStatement, IntegerLiteral, =, FunctionCall, -, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
q_py_topic_functions:q_py_fun_car2,"[IfElseChecking, CallingSimpleFunction, Addition, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, Printing, DefiningSimpleFunction, FindMinimum, Substraction]","[min(), +, FunctionDefinition, print(), ReturnStatement, IntegerLiteral, Less, =, IfElseStatement, ComparisonExpression, FunctionCall, -, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
q_py_topic_if_statement:q_py_if_elif1,"[FindRemainder, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, Printing, IfElifElseChecking]","[print(), IntegerLiteral, IfElifElseStatement, =, ComparisonExpression, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, UnaryOperation, Modulus, ==]"
q_py_topic_if_statement:q_py_nested_if1,"[IfElseChecking, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, Printing, NestedIfChecking]","[print(), IntegerLiteral, Less, =, IfElseStatement, Larger, ComparisonExpression, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
q_py_topic_if_statement:q_py_nested_if_elif1,"[IfElseChecking, FindRemainder, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, Printing, NestedIfChecking]","[print(), IntegerLiteral, =, IfElseStatement, ComparisonExpression, LargerOrEqual, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, Modulus, ==]"
q_py_topic_if_statement:q_py_nested_if_elif2,"[IfElseChecking, Addition, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, Printing, NestedIfChecking]","[NotEqual, or, +, print(), =, IfElseStatement, Larger, ComparisonExpression, FunctionCall, StringLiteral, IfElifStatement, and, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, ==, BooleanOperation]"
q_py_topic_lists:q_py_add_two_lists1,"[SingleForLoopIteration, FindingLength, AddingListElementWithAppend, Addition, AssigningValueVariable, CallingLibraryFunction, Printing, CreatingList, Concatenation, IndexingList, ForLoopWithListIndexing, NestedFunctionCall]","[+, ForStatement, range(), print(), IntegerLiteral, =, len(), ListLiteral, FunctionCall, append(), SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression]"
q_py_topic_lists:q_py_list_access1,"[CreatingList, AssigningValueVariable, Printing, CallingLibraryFunction, ChangingValueListElement]","[print(), IntegerLiteral, =, ListLiteral, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, IndexingExpression]"
q_py_topic_lists:q_py_list_access2,"[SingleForLoopIteration, Multiplication, FindingLength, AssigningValueVariable, CallingLibraryFunction, Printing, CreatingList, ForLoopWithListIndexing, ForLoopWith*=, ChangingValueListElement, NestedFunctionCall]","[ForStatement, range(), print(), IntegerLiteral, =, *, len(), ListLiteral, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression]"
q_py_topic_lists:q_py_list_append1,"[SingleForLoopIteration, FindingLength, AddingListElementWithAppend, Addition, AssigningValueVariable, CallingLibraryFunction, Printing, CreatingList, IndexingList]","[+, ForStatement, range(), print(), IntegerLiteral, =, len(), ListLiteral, FunctionCall, append(), SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression]"
q_py_topic_lists:q_py_list_remove1,"[CreatingList, DeletingListElement, Printing, CallingLibraryFunction, AssigningValueVariable]","[print(), IntegerLiteral, pop(), ListLiteral, FunctionCall, ExpressionStatement, UnaryOperation, IndexingExpression, =]"
q_py_topic_logical_operators:q_py_account_logic1,"[BooleanEvaluating, Addition, AssigningValueVariable, Substraction, ChangingValueVariable]","[+, or, IntegerLiteral, =, Larger, ComparisonExpression, LargerOrEqual, -, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, BooleanOperation]"
q_py_topic_logical_operators:q_py_comparison_logic1,"[BooleanEvaluating, AssigningValueVariable, Printing, CallingLibraryFunction]","[NotEqual, print(), IntegerLiteral, Less, =, ComparisonExpression, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
q_py_topic_loops:q_py_for_loop1,"[SingleForLoopIteration, Addition, AssigningValueVariable, CallingLibraryFunction, Printing]","[+, ForStatement, range(), print(), IntegerLiteral, =, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
q_py_topic_loops:q_py_nested_while1,"[NestedWhileLoopIteration, Addition, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, ChangingValueVariable, Printing, WhileLoopWith+=]","[+, WhileStatement, print(), IntegerLiteral, Less, =, ComparisonExpression, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
q_py_topic_loops:q_py_while_loop1,"[SingleWhileLoopIteration, Addition, AssigningValueVariable, CallingLibraryFunction, ChangingValueVariable, BooleanEvaluating, Printing, WhileLoopWith+=]","[+, WhileStatement, print(), IntegerLiteral, Less, =, ComparisonExpression, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
q_py_topic_loops:q_py_while_loop2,"[SingleWhileLoopIteration, Addition, AssigningValueVariable, CallingLibraryFunction, ChangingValueVariable, BooleanEvaluating, Printing, WhileLoopWith+=]","[+, WhileStatement, print(), IntegerLiteral, Less, =, ComparisonExpression, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
q_py_topic_output_formatting:q_py_output1,"[Printing, FormattingString, CallingLibraryFunction, NestedFunctionCall]","[FloatLiteral, print(), format(), FunctionCall, StringLiteral, ExpressionStatement, IndexingExpression]"
q_py_topic_output_formatting:q_py_output2,"[Printing, FormattingString, CallingLibraryFunction, NestedFunctionCall]","[FloatLiteral, print(), format(), FunctionCall, StringLiteral, ExpressionStatement, IndexingExpression]"
q_py_topic_output_formatting:q_py_output3,"[Multiplication, Addition, AssigningValueVariable, FormattingString, CallingLibraryFunction, Printing, NestedFunctionCall]","[print(), IntegerLiteral, =, *, format(), FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, UnaryOperation, IndexingExpression, +]"
q_py_topic_output_formatting:q_py_output4,"[Printing, FormattingString, CallingLibraryFunction, NestedFunctionCall]","[FloatLiteral, print(), IntegerLiteral, format(), FunctionCall, StringLiteral, ExpressionStatement, IndexingExpression]"
q_py_topic_references:q_py_int_ref1,"[Multiplication, AssigningValueVariable, CallingLibraryFunction, DefiningSimpleFunction, CallingFunctionCallingFunction, DefiningFunctionCallingFunction, Printing]","[print(), ReturnStatement, IntegerLiteral, =, *, FunctionCall, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
q_py_topic_references:q_py_list_int_ref1,"[Addition, AssigningValueVariable, CallingLibraryFunction, ListReferencing, Printing, DefiningSimpleFunction, ChangingValueListElement, CallingSimpleFunction, CreatingList]","[+, print(), IntegerLiteral, =, ListLiteral, FunctionCall, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression]"
q_py_topic_references:q_py_list_str_ref1,"[AssigningValueVariable, CallingLibraryFunction, ReplacingStringContent, DefiningSimpleFunction, CallingFunctionCallingFunction, DefiningFunctionCallingFunction, Printing, ChangingValueListElement]","[replace(), print(), ReturnStatement, =, FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression]"
q_py_topic_references:q_py_str_ref1,"[AssigningValueVariable, CallingLibraryFunction, ReplacingStringContent, Printing, CallingFunctionCallingFunction, DefiningSimpleFunction, DefiningFunctionCallingFunction]","[replace(), print(), ReturnStatement, =, FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement]"
q_py_topic_strings:q_py_concat_strings1,"[SingleWhileLoopIteration, Addition, AssigningValueVariable, CallingLibraryFunction, CreatingString, ChangingValueVariable, Printing, Concatenation, WhileLoopWith+=, BooleanEvaluating]","[+, WhileStatement, print(), IntegerLiteral, Less, AugmentedAssignmentStatement, =, ComparisonExpression, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, UnaryOperation]"
q_py_topic_strings:q_py_substring1,"[CallingLibraryFunction, Addition, AssigningValueVariable, Printing, SlicingString]","[+, print(), =, FunctionCall, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression, SlicingExpression]"
q_py_topic_two_dimensional_array:q_py_2d_arrays1,"[Create2DArray, Addition, Indexing2DArray, AssigningValueVariable, IndexingList]","[ListLiteral, +, =, IntegerLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression]"
q_py_topic_two_dimensional_array:q_py_2d_arrays2,"[FindingLength, AssigningValueVariable, NestedForLoopIteration, Create2DArray, Addition, CallingLibraryFunction, ForLoopWithListIndexing, ChangingValueListElement, ChangingValue2DArrayElement, Multiplication, Substraction]","[ForStatement, +, range(), IntegerLiteral, =, *, len(), ListLiteral, FunctionCall, -, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression]"
q_py_topic_two_dimensional_array:q_py_2d_arrays3,"[SingleForLoopIteration, AssigningValueVariable, NestedForLoopIteration, Create2DArray, Addition, CallingLibraryFunction, Printing, ForLoopWithListIndexing, ChangingValueListElement, ChangingValue2DArrayElement, Substraction]","[ForStatement, +, range(), print(), IntegerLiteral, =, *, ListLiteral, FunctionCall, -, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression]"
q_py_topic_two_dimensional_array:q_py_2d_arrays4,"[Indexing2DArray, FindingLength, AssigningValueVariable, IfCheckingInForLoop, NestedForLoopIteration, Create2DArray, Addition, CallingLibraryFunction, BooleanEvaluating, ChangingValueVariable, IndexingList, ForLoopWithListIndexing, ForLoopWith+=]","[ForStatement, +, range(), IntegerLiteral, AugmentedAssignmentStatement, =, Larger, ComparisonExpression, len(), IfStatement, ListLiteral, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression]"
q_py_topic_variables:q_py_arithmetic1,"[Division, AssigningValueVariable, Printing, CallingLibraryFunction, Substraction]","[print(), IntegerLiteral, =, //, FunctionCall, -, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, UnaryOperation]"
q_py_topic_variables:q_py_arithmetic2,"[Power, Addition, AssigningValueVariable, Multiplication]","[+, IntegerLiteral, =, **, *, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
q_py_topic_variables:q_py_exchange1,"[AssigningValueVariable, Multiplication, Substraction]","[FloatLiteral, IntegerLiteral, =, *, -, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
q_py_topic_variables:q_py_exchange2,"[TransformingToIntType, Division, AssigningValueVariable, CallingLibraryFunction, Substraction]","[FloatLiteral, IntegerLiteral, int(), =, /, FunctionCall, -, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
q_py_topic_variables:q_py_swap1,"[Addition, AssigningValueVariable, CallingLibraryFunction, SwappingValueVariables, Printing]","[+, print(), IntegerLiteral, =, FunctionCall, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
q_topic_classes_objects:q_py_inheritance_animal1,"[DefiningObjectMethod, DefiningClass, Multiplication, AssigningValueVariable, CreatingObject, CallingLibraryFunction, Printing, DefiningSimpleFunction, CallingObjectMethod, NestedFunctionCall, CallingSimpleFunction]","[ClassDefinition, print(), ReturnStatement, IntegerLiteral, =, *, FunctionCall, StringLiteral, FunctionDefinition, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation]"
q_topic_classes_objects:q_py_obj_account1,"[DefiningClass, Addition, CreatingObject, AssigningValueVariable, CallingLibraryFunction, Printing, DefiningSimpleFunction, CreatingDictionary, AddingItemToDictionary, CallingObjectMethod, IndexingDictionary, ChangingValueDictionaryElement, Substraction, CallingSimpleFunction, AccessingDictionary, DefiningObjectMethod]","[ClassDefinition, +, FunctionDefinition, print(), ReturnStatement, IntegerLiteral, AugmentedAssignmentStatement, =, FunctionCall, DictLiteral, -, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression, init()]"
q_topic_classes_objects:q_py_obj_bus1,"[DefiningClass, IfChecking, Addition, CreatingObject, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, Printing, DefiningSimpleFunction, FindMinimum, CallingObjectMethod, CallingSimpleFunction, DefiningObjectMethod, Substraction]","[ClassDefinition, min(), FunctionDefinition, print(), ReturnStatement, IntegerLiteral, Less, =, BooleanLiteral, Larger, ComparisonExpression, IfStatement, FunctionCall, -, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, init(), +]"
q_topic_classes_objects:q_py_obj_car1,"[DefiningObjectMethod, DefiningClass, IfChecking, CreatingObject, AssigningValueVariable, Addition, CallingLibraryFunction, BooleanEvaluating, Printing, FindMinimum, CallingObjectMethod, BooleanLiteral]","[min(), +, ClassDefinition, FunctionDefinition, print(), ReturnStatement, IntegerLiteral, Less, =, ComparisonExpression, IfStatement, FunctionCall, -, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, init()]"
q_topic_classes_objects:q_py_obj_car2,"[DefiningObjectMethod, DefiningClass, IfChecking, CreatingObject, AssigningValueVariable, Addition, CallingLibraryFunction, BooleanEvaluating, Printing, FindMinimum, CallingObjectMethod, Substraction, NestedFunctionCall]","[ClassDefinition, +, min(), FunctionDefinition, print(), ReturnStatement, IntegerLiteral, Less, =, BooleanLiteral, Larger, ComparisonExpression, IfStatement, FunctionCall, -, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, init()]"
q_topic_classes_objects:q_py_obj_point1,"[DefiningObjectMethod, DefiningClass, CreatingObject, AssigningValueVariable, CallingLibraryFunction, BooleanEvaluating, Printing, DefiningSimpleFunction, IfElifElseChecking, CallingObjectMethod, Substraction, CallingFunctionCallingFunction, DefiningFunctionCallingFunction]","[ClassDefinition, FunctionDefinition, print(), ReturnStatement, IntegerLiteral, IfElifElseStatement, =, Larger, ComparisonExpression, FunctionCall, StringLiteral, -, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, init()]"
q_topic_classes_objects:q_py_obj_student1,"[SingleForLoopIteration, DefiningObjectMethod, TransformingToFloatType, FindingLength, DefiningClass, AddingListElementWithAppend, Addition, AssigningValueVariable, IfCheckingInForLoop, CallingLibraryFunction, CreatingObject, BooleanEvaluating, Printing, DefiningSimpleFunction, CreatingList, Division, CallingObjectMethod, IndexingList, ForLoopWithListIndexing, Substraction, TransformingToIntType, CallingSimpleFunction]","[FloatLiteral, /, IfStatement, ForStatement, +, range(), =, FunctionCall, append(), -, ClassDefinition, FunctionDefinition, print(), ReturnStatement, float(), Larger, ComparisonExpression, len(), ListLiteral, StringLiteral, SimpleAssignmentStatement, ExpressionStatement, BinaryOperation, IndexingExpression, IntegerLiteral, init(), int()]"
